---
title: "Infrastructure as code (IaC)"
subtitle: Infrastructure as code (IaC) uses DevOps methodology
author: albertprofe
date: "06/01/2021"
date-modified: last-modified
date-format: full
description: Infrastructure as code (IaC) uses DevOps methodology and versioning with a descriptive model to define and deploy infrastructure, such as networks, virtual machines, load balancers, and connection topologies.  rather than changed
categories: [devops, immutable]
toc: true
number-sections: true
highlight-style: pygments
format:
  html

---

# Overview

![](/images/devops/devops-infraascode.png){fig-align="center" width="70%"}

<mark>`Infrastructure as code (IaC)` uses `DevOps` methodology and versioning with a `descriptive` model to define and deploy infrastructure, such as networks, virtual machines, load balancers, and connection topologies</mark>.

Just as the same source code always generates the same binary, an `IaC model` generates the **same environment every time it deploys.**

# Benefits of IaC

Provisioning infrastructure has historically been a time-consuming and costly manual process. As virtualization, containers, and cloud computing have become the norm, infrastructure management has moved away from physical hardware in data centers—providing many benefits, but also creating some new challenges.

::: {.callout-note}
# Cloud computing

With cloud computing, the number of infrastructure components has grown, more applications are being released to production on a daily basis, and infrastructure needs to be able to be spun up, scaled, and taken down frequently.

Without an `IaC` practice in place, it becomes increasingly difficult to manage the scale of today’s infrastructure.

:::


`IaC` can help your organization manage IT infrastructure needs while also improving consistency and reducing errors and manual configuration.

![](/images/devops/devops-benefits-infraascode.png){fig-align="center" width="70%"}

Benefits:

- Cost reduction
- Increase in speed of deployments
- Reduce errors
- Improve infrastructure consistency
- Eliminate configuration drift


# Avoid manual configuration to enforce consistency


`IaC` evolved to solve the problem of environment drift in release pipelines. Without `IaC`, teams must maintain deployment environment settings individually. Over time, each environment becomes a "snowflake," a unique configuration that can't be reproduced automatically. Inconsistency among environments can cause deployment issues. Infrastructure administration and maintenance involve manual processes that are error prone and hard to track.

<mark>`IaC` avoids manual configuration and enforces consistency by representing desired environment states via well-documented code in formats such as JSON<mark>.

Infrastructure deployments with `IaC` are repeatable and prevent runtime issues caused by configuration drift or missing dependencies.

Release pipelines execute the environment descriptions and version configuration models to configure target environments. To make changes, the team edits the source, not the target.

# Tools

Using IaC config files, you can automate deployments of networks, virtual machines, servers, databases, etc. So, to orchestrate this infrastructure you wil need some tools:


- Terraform
- CloudFormation
- Ansible
- Puppet
- Pulumi
- Docker

# Links


- [Infrastructure as Code - Wikipedia](https://en.wikipedia.org/wiki/Infrastructure_as_Code){.external target='_blank'}
- [What is Infrastructure as Code? - AWS](https://aws.amazon.com/what-is/iac/){.external target='_blank'}
- [Infrastructure as Code Overview - Google Cloud](https://cloud.google.com/docs/iac){.external target='_blank'}
- [What is Infrastructure as Code (IaC)? - Red Hat](https://www.redhat.com/en/topics/automation/what-is-infrastructure-as-code-iac){.external target='_blank'}
- [What is Infrastructure as Code? - Microsoft](https://learn.microsoft.com/en-us/devops/deliver/what-is-infrastructure-as-code){.external target='_blank'}
- [The Best Infrastructure as Code Tools](https://www.clickittech.com/devops/infrastructure-as-code-tools/){.external target='_blank'}

