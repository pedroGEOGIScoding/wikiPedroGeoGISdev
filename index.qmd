---
format:
  html:
    toc: false
repo-actions: false
---

<link rel="stylesheet" type="text/css" href="//fonts.googleapis.com/css?family=Roboto" />

<style>

.animated-text {
  font-size: 90px;
  color: #000;
  font-family; 'Roboto';
  text-align: center;
}

@keyframes letterAnimation {
  0% { opacity: 0; transform: translateY(-10px); }
  10% { opacity: 1; transform: translateY(0); }
  100% { opacity: 0; transform: translateY(10px); }
}

#spin {
  color:white;
}
#spin:after {
  content:"";
  padding: 15px;
  border-radius: 20px;
  animation: spin 16s linear infinite;
}
@keyframes spin {
  0% { content: "JAVA";background-color:blue;}
  8% { content:"QGIS";background-color:green;}
  16% { content:"ARCGIS PRO";background-color:lightblue;}
  24% { content:"REACT";background-color:blue;}
  32% { content:"SPRING BOOT";background-color:green;}
  40% { content:"BASH";background-color:grey;}
  48% { content: "LINUX";background-color:yellow;}
  56% { content: "API REST";background-color:orange;}
  64% { content: "DEVOPS";background-color:red;}
  72% { content: "AWS";background-color:orange;}
  80% { content: "MARKDOWN";background-color:blue;}
  100% { content: "QUARTO";background-color: red; }
}


</style>

::: {.column-screen}

<div class="animated-text">
<p>WebGIS Full Stack Development </br><b><span id="spin"></span></b></br>Earth Explore</p>
</div>

:::

<div style="text-align:center;color:grey">

</br></br>

:::{.column-page}
<!-- Visitor Location Map -->
<div style="text-align: center; margin: 20px 0;">
  <h3 style="color: #666; margin-bottom: 10px;">üìç Your Location</h3>
  <div id="map" style="height: 600px; width: 100%; border-radius: 10px; box-shadow: 0 4px 8px rgba(0,0,0,0.2);"></div>
  <div id="coordinates" style="margin-top: 10px; font-family: monospace; color: #555; font-size: 14px;">üåç Getting your location...</div>
</div>
:::

<!-- Leaflet CSS and JS -->
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>

<!-- Custom CSS for layer control alignment -->
<style>
.leaflet-control-layers-base {
    text-align: left !important;
}

.leaflet-control-layers-base label {
    display: flex !important;
    align-items: center !important;
    justify-content: flex-start !important;
    margin: 2px 0 !important;
}

.leaflet-control-layers-base input[type="radio"] {
    margin-right: 8px !important;
    margin-left: 0 !important;
}

.leaflet-control-layers {
    padding: 8px 10px !important;
    min-width: 150px !important;
}
</style>

<script>
// Initialize the map
let map = L.map('map').setView([41.3031, 2.0763], 10); // Default to Barcelona, Spain

// Define base layers
const openStreetMap = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
    attribution: '¬© <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
    maxZoom: 18
});

const satelliteMap = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {
    attribution: '¬© <a href="https://www.esri.com/">Esri</a>, Maxar, Earthstar Geographics, and the GIS User Community',
    maxZoom: 18
});

// Add default layer (OpenStreetMap)
openStreetMap.addTo(map);

// Create layer control
const baseLayers = {
    "üó∫Ô∏è OpenStreetMap": openStreetMap,
    "üõ∞Ô∏è Satellite Image": satelliteMap
};

// Add layer control to bottom-left
L.control.layers(baseLayers, null, {
    position: 'bottomleft',
    collapsed: false
}).addTo(map);

// Custom icon for user location
const userIcon = L.divIcon({
    className: 'custom-div-icon',
    html: '<div style="background-color: #ff4444; width: 20px; height: 20px; border-radius: 50%; border: 3px solid white; box-shadow: 0 2px 4px rgba(0,0,0,0.3); display: flex; align-items: center; justify-content: center;"><span style="color: white; font-size: 12px; font-weight: bold;">üìç</span></div>',
    iconSize: [26, 26],
    iconAnchor: [13, 13]
});

let userMarker;

// Function to update location
function updateLocation(lat, lon) {
    // Remove existing marker if any
    if (userMarker) {
        map.removeLayer(userMarker);
    }
    
    // Add new marker
    userMarker = L.marker([lat, lon], {icon: userIcon}).addTo(map);
    
    // Update coordinates display
    document.getElementById('coordinates').innerHTML = 
        `üåç Latitude: <strong>${lat.toFixed(6)}</strong> | Longitude: <strong>${lon.toFixed(6)}</strong>`;
    
    // Center map on user location
    map.setView([lat, lon], 10);
    
    // Add popup to marker
    userMarker.bindPopup(`
        <div style="text-align: center;">
            <strong>üìç Your Location</strong><br/>
            <small>Lat: ${lat.toFixed(6)}<br/>Lon: ${lon.toFixed(6)}</small>
        </div>
    `).openPopup();
}

// Get user's location
if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(
        function(position) {
            const lat = position.coords.latitude;
            const lon = position.coords.longitude;
            updateLocation(lat, lon);
        },
        function(error) {
            console.log('Geolocation error:', error);
            document.getElementById('coordinates').innerHTML = 
                'üåç Location access denied or unavailable. Showing default location (Barcelona, Spain).';
            updateLocation(41.3031, 2.0763); // Default to Barcelona
        },
        {
            enableHighAccuracy: true,
            timeout: 10000,
            maximumAge: 60000
        }
    );
} else {
    document.getElementById('coordinates').innerHTML = 
        'üåç Geolocation not supported by this browser. Showing default location (Barcelona, Spain).';
    updateLocation(41.3031, 2.0763); // Default to Barcelona
}
</script>

:::{.column-page}

| Date | Type | Article | Content |
| -- | -- | :-- | :-- |
| 07/2025 |     <mark>Python</mark> | ![](/images/home/python-logo.png){width="5%"}  [MOOC Python](https://programming-24.mooc.fi/){.external target='_blank'}  | Helsinki Python MOOC |
| 07/2025 |    <mark>Java</mark> | ![](/images/home/java-logo.png){width="5%"} [MOOC Java](https://java-programming.mooc.fi/){.external target='_blank'}  | Helsinki Java MOOC |


:::

</br></br>

Scripting: [BASH](/linux/linux-what-bash.qmd), (short for ‚ÄúBourne again shell‚Äù) is a Unix shell |  Structured and Procedural: C |   OOP (Object-Oriented Programming): [Java SE](https://java-programming.mooc.fi/) |  COP (Components-Oriented Programming): [React JS](https://reactjs.org/) and [React TS](https://www.typescriptlang.org/docs/handbook/react.html)


[Git](/devops/devops-vc-git.qmd), a version control system |  [Git](https://git-scm.com/) is used for source code management |   [GitHub](https://github.com/) git on cloud |  GitLab / Subversion |   [Idea](/devops/devops-vc-ideagithub.qmd) and GitHub 2023 |  [Git and GitHub 2023 CLI](/devops/devops-vc-gitgh.qmd) |  [CLI gH](https://cli.github.com/), to your terminal |   IDE: [Visual Code](/devops/devops-ide-visualcode.qmd) / IntellJ Idea


</div>



