---
title: "IFCD0021 Product Backlog"
categories: [ifcd0021, backlog]
toc: true
number-sections: false
format:
  html
baseurlaws: "https://cifojava2024screenrecordings.s3.eu-central-1.amazonaws.com/"
---


![Backlog course](/images/home/backlog.jpg){width="30%"}




# Product Backlog by Month

::: {.callout-tip title="Months"}
- [September 2024](/ifcd0021-24/ifcd0021backlog-product-24.qmd#september-2024)
- [October 2024](/ifcd0021-24/ifcd0021backlog-product-24.qmd#october-2024)
- [November 2024](/ifcd0021-24/ifcd0021backlog-product-24.qmd#november-2024)


:::



::: {.column-page-right}

## September 2024


| Sprint | Day | Date | Topics |  Details Topics |
| -- | -- | -- | -- | -- |
|  #01 | 1 | 09/09/2024 | - <b>Mindset</b> </br>- <b>Presentation</b>:  web, why i do not like full stack definition (netflix definition), what is a dev (2022-25), scrum/agile? AI?, what is this course and what is not (personal tutor, university, an oportunity to learn and code and not getting a title, java),  learning is (your responsibility: ask, debate, speak, be active, balance in class: positive emotions and active dynamics), <s>how to learn</s></br> - <b>POO & Java</b> (SE & EE: Spring Boot)  </br> - <b>Systems</b>: gitHub, Linux (VirtualBox SSD ext), VCode, IntellIJIdea, MOOC Helsinki, Markdown, NextCloud, FlameShot, Jitsi  </br>  - <s> Lateralization </s></br> </br> - <i>Homework: what is Pareto Principle?</i> |  - [albertprofe.dev](https://albertprofe.dev){.external target='_blank'} </br> - [Unveiling the Technological Marvels behind Netflixâ€™s Seamless Experience](https://kasun-r-weerasinghe.medium.com/architecture-of-netflix-1c38257f1f4a){.external target='_blank'} </br>  - [Jit Si Meet fullstack2024](https://meet.jit.si/fullstack2024){.external target='_blank'}|
|   | 2 | 10/09/2024 | - Lateralization, how to learn, pareto </br>  - SCRUM fundamentals </br>  - Java Dependencies Management: Maven </br> - <s>POO: methods </s></br> - GitHub: create repo, commit, push,.. </br> - <s>UML</s> </br> </br> <i> Homework: Pareto examples, Kind of problems? Simple, Complicated, Complex, Kaotic, SCRUM Guide</i>  | - [git basics](https://gist.github.com/AlbertProfe/b05e8198f02b311d18e7c4a86c5241e0){.external target='_blank'} </br>  - [gh auth login](https://cli.github.com/manual/gh_auth_login){.external target='_blank'}</br> - [UML](/javase/se-pattern-uml.qmd){.external target='_blank'}</br>- [Maven Create Project](/javase/se-concepts-createproject.qmd){.external target='_blank'}  </br> - [Push to git](/javase/se-concepts-projectgit.qmd){.external target='_blank'}  </br> - [UML Mermaid](https://mermaid.js.org/){.external target='_blank'}|
|   | 3 | 12/09/2024 | - <s>POO: methods & static modifier</s> </br> - UML: </br> (1) Keep it simple, Do not run, Foucs and get things done </br> (2) Class Diagram, Core Classes, DDD  </br>  ++ Comunication relevance: job interview, team, good prompts, defining bugs </br> UML: multiplicity, 1:1, 1:n, n:m | - [Projects UML](https://gist.github.com/AlbertProfe/ae6bf1af9cee2ccf77d6c400556d18c7){.external target='_blank'} </br>   - [Git](/devops/devops-vc-git.qmd){.external target='_blank'}  </br>  - [Git tutorial](https://www.atlassian.com/git/tutorials/setting-up-a-repository/git-init){.external target='_blank'} </br>  ![](/images/ifcd0021-24/photo_2024-09-12_10-41-17.jpg){.lightbox}| 
|   | 4 | 13/09/2024 | - <B>POO</B>: class, object, model, MVC, methods, new </br> - <s>UML</s> | - [Lab#SE04-1](/javase/selab4-1.qmd){.external target='_blank'} </br>  - [MOOC: Objects and references](https://java-programming.mooc.fi/part-5/4-objects-and-references){.external target='_blank'} </br>  - [Restaurant Java](https://github.com/AlbertProfe/restaurant){.external target='_blank'}|
|  #02 | 5 | 16/09/2024 | - Metrics: plan-execute-review-reflexionate </br>- Lab#Restaurant: </br> (1)  DDD </br> (2)  Model </br> (3) Hashmap data structure </br> (4) core concepts: micro & macro and then architecture </br> (5) Data & Operation flux  </br>  - <s>Git</s>  | - [POO: objects](/javase/se-concepts-objects.qmd){.external target='_blank'} </br> - [Lab#SE04-1](/javase/selab4-1.qmd){.external target='_blank'} </br>  - [MOOC: Objects and references](https://java-programming.mooc.fi/part-5/4-objects-and-references){.external target='_blank'} </br>  - [Restaurant Java: calculateTotalPayment() methods, static and scope and hash](https://github.com/AlbertProfe/restaurant/tree/4f36b6b466f3c0f124dcb6344a36b7ee7faccd9d){.external target='_blank'} |
|   | 6 | 17/09/2024 | - Lab#Restaurant: </br> (1)  <s>JUnit</s> </br> (2)  Model </br> (3)  Fake data: database with HashMap </br>  - Git: fork,clone, branch, commit, push and pull request   | - [POO: scope](/javase/se-concepts-scope.qmd){.external target='_blank'} </br> - [Lab#SE04-1](/javase/selab4-1.qmd){.external target='_blank'} </br>  - [MOOC: Objects and references](https://java-programming.mooc.fi/part-5/4-objects-and-references){.external target='_blank'} </br>  - [Restaurant Java: calculateTotalPayment() implemented](https://github.com/AlbertProfe/restaurant/tree/9364ecddd00376d57d8136c2e14213adf5505447){.external target='_blank'} </br> - [Git Checkout](https://www.atlassian.com/es/git/tutorials/using-branches/git-checkout){.external target='_blank'}  </br>  - [gh repo fork](https://cli.github.com/manual/gh_repo_fork){.external target='_blank'}|
|   | 7 | 18/09/2024 | - Lab#Restaurant: </br> (1)  Business Logic & Controller </br> <s>(2) Entity Manager</s> </br>  (3) utils domain: create and use Entities  </br>- Git: pull request management from IDE  </br> - <s>SCRUM</s> </br>  Project management: project-DDD-UML-code | - [POO: static](/javase/se-concepts-static.qmd){.external target='_blank'} </br> - [Lab#SE04-1](/javase/selab4-1.qmd){.external target='_blank'} </br>  - [Restaurant Java: DDD, utils & repo](https://github.com/AlbertProfe/restaurant/tree/e50a5af2f698da42ef0727d6f253ee034bb1df88){.external target='_blank'}   </br> - [Restaurant Java: testOrder() and printStatusTable() in Utilities](https://github.com/AlbertProfe/restaurant/tree/4b435973247f5cfddfacda064b3989119743914a){.external target='_blank'} |
|   | 8 | 19/09/2024 |  - Lab#Restaurant: </br> (1)  Business Logic & Controller </br> (2) Entity Manager </br>  - <s>Git</s> </br></br>  <i> HW: 3 keywords for Restaurant domains  </i>| - <s>[POO: TDD](/javase/se-concepts-tdd.qmd){.external target='_blank'}</s> </br> - [Lab#SE04-1](/javase/selab4-1.qmd){.external target='_blank'} </br>  - [Restaurant Java: controller domain implemented with testOrder() and printStatusTable()](https://github.com/AlbertProfe/restaurant/tree/7d2a30be28eebb0b3aebe9f5402c0f19ebb6c079){.external target='_blank'} </br>  - [Restaurant Java: managers domain created and testOrder() to manager](https://github.com/AlbertProfe/restaurant/tree/4bf6ce5e19dbdd1b48bb9179bea8c914ba4f44a3){.external target='_blank'} |
|   | 9 | 20/09/2024 | - Lab#Restaurant: </br>  (1) UML diagrams flux data  </br>  (2) skeleton MenuManager and TableManager </br> (3) createOrder() pseudo-code  </br> - <s>SCRUM: </br>  (1) plan-execute-review-reflexionate </br>  (2)  Albertu's dylema </s>  | -  [POO: Coupling](/javase/se-concepts-coupling.qmd){.external}  </br>  - [Restaurant Java: skeleton TableManager and MenuManager](https://github.com/AlbertProfe/restaurant/tree/107257a1c1d94349c68331eaaaeba1b4d103c942){.external target='_blank'} </br> - [createOrder](https://github.com/AlbertProfe/hello11/blob/3f930d10340dca2ca756fdecaa58ff287bff0fea/src/main/java/org/example/manager/OrderManager.java#L26){.external target='_blank'} </br> - [how to iterate hashMap](https://gist.github.com/AlbertProfe/5cb37c23274afac4cc4071bf9cdbddcd){.external target='_blank'}|
|  #03 | 10 | 23/09/2024 | -  Lab#Restaurant: </br> (1)  Business Logic & Controller: createOrder </br> (2) <s>Entity Manager (Table, Menu)</s> </br> (3) createOrder: decopule, foreach, return, printOrder, order saved, error try/catch, table to busy, key id </br></br> <i> HW: plan this week   </i> | -  [POO: Coupling](/javase/se-concepts-coupling.qmd){.external}   </br> - [createOrder](https://github.com/AlbertProfe/hello11/blob/3f930d10340dca2ca756fdecaa58ff287bff0fea/src/main/java/org/example/manager/OrderManager.java#L26){.external target='_blank'} </br>  - [createOrder v3.0](https://github.com/AlbertProfe/restaurant/tree/a9c4a72d502d9fa6b38f24a93b79754a929d49ca){.external target='_blank'}  </br>  - <s>[How to iterate hashMap](https://gist.github.com/AlbertProfe/5cb37c23274afac4cc4071bf9cdbddcd){.external target='_blank'}  </br>  - [Lab#SE02-2: HashMaps](/javase/selab2-2.qmd){.external target='_blank'} </br>  - [HashMaps Example](https://docs.google.com/document/d/1xghnpAuLPzsmWJ1cWpoz74wGj7SPYYbl/edit?usp=sharing&ouid=105799927838662147896&rtpof=true&sd=true){.external target='_blank'} </br>  - [HashMpas Tutorial](https://docs.google.com/presentation/d/11zRRmN2geXimJ53IfSHpOn6jjwXW8x7HyTQQXf8HR04/edit?usp=sharing){.external target='_blank'}  </s> |
|   | 11 | 25/09/2024 |   - Lab#Restaurant: </br> (1)  Business Logic & Controller: createOrder </br> (2) <s>Entity Manager (Table, Menu)</s> </br>  (3) createOrder: decopule, foreach, return, printOrder, order saved, error try/catch, table to busy, key id </br> - Git: Udea </br></br>   |  - [createOrder v4.0](https://github.com/AlbertProfe/restaurant/tree/10b1a66774d09854fa4b1e7f64eb2f8ecc25f742){.external target='_blank'}  </br>  - [createOrder v5.0](https://github.com/AlbertProfe/restaurant/tree/f5f903ce2e7c887c5ada2957398ca2ec0eb1d4dc){.external target='_blank'}  </br>  - [createOrder v3.4](https://github.com/AlbertProfe/restaurant/tree/c723947f6634bd5fb7f040c963fed1e8128e4a76){.external target='_blank'} </br>  - [How to iterate hashMap](https://gist.github.com/AlbertProfe/5cb37c23274afac4cc4071bf9cdbddcd){.external target='_blank'} </br> - [Lab#SE04-1](/javase/selab4-1.qmd){.external target='_blank'} </br>  - [Lab#SE02-2: HashMaps](/javase/selab2-2.qmd){.external target='_blank'} </br>  - [HashMaps Example](https://docs.google.com/document/d/1xghnpAuLPzsmWJ1cWpoz74wGj7SPYYbl/edit?usp=sharing&ouid=105799927838662147896&rtpof=true&sd=true){.external target='_blank'} </br>  - [HashMpas Tutorial](https://docs.google.com/presentation/d/11zRRmN2geXimJ53IfSHpOn6jjwXW8x7HyTQQXf8HR04/edit?usp=sharing){.external target='_blank'} </br> - [Idea: manage commits](/devops/devops-vc-ideagithub.qmd#manage-commits-intelljidea){.external target='_blank'}   </br>  - [Idea Git](https://www.jetbrains.com/help/idea/using-git-integration.html){.external target='_blank'} |
|   | 12 | 26/09/2024 |   - Lab#Restaurant: </br> (1)  Business Logic & Controller </br> (2) <s>Entity Manager (Table, Menu)</s> </br>  (3) createOrder: test JUnit and Mockito</br>- <s>Git</s> </br> - SCRUM: Why planning is so important </br></br>   |  - [POO: TDD](/javase/se-concepts-tdd.qmd){.external target='_blank'} </br> - [dependency Mockito](https://mvnrepository.com/artifact/org.mockito/mockito-junit-jupiter/5.13.0){.external target='_blank'} </br> - [createOrder test](https://github.com/AlbertProfe/restaurant/tree/4252423e527adcc237519b8b630a423fea667212){.external target='_blank'} </br> - [JUnit 5](https://junit.org/junit5/){.external target='_blank'}  </br>  - [Mockito](https://site.mockito.org/){.external target='_blank'}</br> - [SCRUM: concepts](/scrum/scrum-what-concepts.qmd){.external target='_blank'}</br> - [SCRUM: guide](/scrum/scrum-what-guide.qmd){.external target='_blank'}</br>  - <s> [Git](/devops/devops-vc-git.qmd){.external target='_blank'} </s> |
|   | 13 | 27/09/2024 |   - Lab#Restaurant: </br> (1)  Business Logic & Controller </br> <s>(2) Entity Manager (Table, Menu)</s> </br>  (3) createOrder: test JUnit and Mockito and use-case no-table available </br> (4) Booking table class & status management (present and future) </br> (5) Take Away: inherence, type object or two classes? </br>  - <s>Git</s> </br> - SCRUM: plan-execute-review-reflexionate </br></br>    | - [SCRUM: concepts](/scrum/scrum-what-concepts.qmd){.external target='_blank'}</br> - [SCRUM: guide](/scrum/scrum-what-guide.qmd){.external target='_blank'}</br>   - [createOrder tests: calculateTotalPayment](https://github.com/AlbertProfe/restaurant/tree/f0c0d52a36caf5773fc0fcf0835297a79e8f08c8){.external target='_blank'}  </br>- <s>[Git](/devops/devops-vc-git.qmd){.external target='_blank'}</s> |
: Backlog course September 2024 table {tbl-colwidths="[2,2,2,60,34]"}


## October 2024


| Sprint | Day | Date | Topics |  Details Topics |
| -- | -- | -- | -- | -- |
|  #04 | 14 | 30/09/2024 |  -  **Time management**: habits, metrics and time-boxing</br>  - Sprring: </br>   (1) What is Spring  </br>  (2)  Spring Boot </br>  (3)  Create a Spring Boot Project  | - [Spring](/spring/spring-basics.qmd){.external target='_blank'} </br>   - [Spring Boot](/springboot/boot-what-basics.qmd){.external target='_blank'} </br>  - [Spring Init](https://start.spring.io/){.external target='_blank'}  </br> - [Spring Boot: create project](/springboot/boot-what-create.qmd){.external target='_blank'} </BR>- [Lab#SB08-1](/springboot/sblab8-1.qmd){.external target='_blank'}   |
|   | 15 | 01/10/2024 |   -  **Time management**: bad habits and mindset, growth, fixed, survival </br>  - Spring Boot: </br>  (1)  @Controler and @RestController </br>   (2)  Project structure & Spring Architecture  </br>  <s>(3)  application.properties </s>  </br>  (4)  Model  </br>  ++ DevOps strategies MV: timeshift, clone, virtualBox snapshot, docs at cloud </br>   ++ Pavoland | - [Pavoland](//scrum/scrum-week1.qmd#lindy-effect--turkey-parable){.external target='_blank'}</br> ![](/images/ifcd0021-24/-6041841713917576099_121.jpg){.lightbox} </br> ![](/images/scrum/cycle-survial.PNG){.lightbox} </br> - [SCRUM: mindset](/scrum/scrum-week5.qmd){.external target='_blank'} </br> - [Spring Boot](/springboot/boot-what-basics.qmd){.external target='_blank'}  </br>  - [Spring Boot: create project](/springboot/boot-what-create.qmd){.external target='_blank'}  </br> - [Spring Boot: create full project](/springboot/boot-what-create-th-h2.qmd){.external target='_blank'} </BR>  - [Lab#SB08-1](/springboot/sblab8-1.qmd){.external target='_blank'} |
|   | 16 | 02/10/2024 |  - Lab#SB08-1 Spring Boot **RestaurantVaadin**: </br>  (1)  @RestController and <s>@Service</s>  </br>   (2)  Project structure & Architecture </br>  (3)  JPA and H2  </br>  (4)  view: Vaadin </br> (4)  Model: @Entity  | ![](/images/springboot/lab08-1-vaadin-view-restaurantVaadin.png){.lightbox} </br> - [RestaurantVaadin](https://github.com/AlbertProfe/restaurantVaadin/tree/6a3c9f133093c2d58feb9cb86ea5d44c783cfb23){.external target='_blank'} </br>- [Lab#SB08-1](/springboot/sblab8-1.qmd){.external target='_blank'} </BR>  - [Spring Boot: Data](/springboot/boot-concepts-data.qmd){.external target='_blank'} </br>  - [Spring Boot: JPA](/springboot/boot-concepts-jpa.qmd){.external target='_blank'}  </BR>  - [Spring Boot: Model](/springboot/boot-concepts-model.qmd){.external target='_blank'}  </br>  - [Vaadin tutorial](https://vaadin.com/docs/latest/getting-started/tutorial){.external target='_blank'} </br>  - [Vaadin start app](https://start.vaadin.com/app){.external target='_blank'} </br> - [Vaadin demo](https://starpass.demo.vaadin.com/bookings/customers){.external target='_blank'} </br> - [API rest](https://albertprofe.dev/devops/devops-network-rest.html){.external target='_blank'}|
|   | 17 | 03/10/2024 |  - Lab#SB08-1 Spring Boot **RestaurantManager**: </br>  (1) Model @Entity Customer  </br> (2) Template: TH  </br> (3) @RestController & @Controller </br> (4) application.properties</br> (5) JPA and H2 -  </BR> <s>Git</s> </br> | ![](/images/springmvc/mvc2.png) </br> - [Lab#SB08-1](/springboot/sblab8-1.qmd){.external target='_blank'} </BR>  - [Spring Boot: Rest](/springboot/boot-concepts-rest.qmd){.external target='_blank'} </br> - [RestaurantManager code](https://github.com/AlbertProfe/restaurantManager/tree/898494365a0bf4c96a1219b2da895b0230a86cc6){.external target='_blank'} </br> - [Thymeleaf](https://www.thymeleaf.org/){.external target='_blank'}</br> - [H2 DB](https://www.h2database.com/html/main.html){.external target='_blank'}  </br> - [Spring TH](/springboot/boot-concepts-th.qmd){.external target='_blank'} </BR>  - [Spring Boot Data](/springboot/boot-concepts-data.qmd){.external target='_blank'}|
|   | 18 | 04/10/2024 | - Lab#SB08-1 Spring Boot **RestaurantManager**: </br>  (1) Model Restaurant @Entity </br> (2) CRUD @RestController  </br>  (3) Interface @Service and  @ServiceImpl  </br >  ++  Query creation from method names </br> ++ Swagger  </br>-  <s>Git</s> </br> ++ Markdown: document  | - [Lab#SB08-1](/springboot/sblab8-1.qmd){.external target='_blank'} </BR>  - [Spring Boot: Rest](/springboot/boot-concepts-rest.qmd){.external target='_blank'}  </br> - [Defining Query Methods](https://docs.spring.io/spring-data/jpa/reference/repositories/query-methods-details.html){.external target='_blank'}</br> - [Query creation from method names](https://docs.spring.io/spring-data/jpa/reference/jpa/query-methods.html){.external target='_blank'} </br> - [Swagger](https://swagger.io/){.external target='_blank'} </br>  - [Redis](https://redis.io/es/){.external target='_blank'} </br> - [Spirng Boot create H2 TH](/springboot/boot-what-create-th-h2.qmd){.external target='_blank'} </br> - [Markdown](/markup/markup-lang-md.qmd){.external target='_blank'}|
|  #05 | 19 | 07/10/2024 | - Lab#SB08-3 Spring Boot **RestaurantManager**: </br>  (1) Model @Entity Customer (& <S>Order</S>)   </br> (2) API Rest: @RestController with **Swagger** </br> (3) @CustomerService and @CustomerServiceImpl </br> (4) application.properties</br> (5) JPA and H2 </BR> ++ Spring MVC, Boot, JEE and Jakarta </br> ++ `ResponseEntity` | ![](/images/springboot/lab08-1-vaadin-view-restaurantVaadin.png)  </BR> - [Lab#SB08-3](/springboot/sblab8-3.qmd){.external target='_blank'} </BR>  - [Transition from Java EE to Jakarta EE](https://blogs.oracle.com/javamagazine/post/transition-from-java-ee-to-jakarta-ee){.external target='_blank'} </br>  - [Spring MVC](/spring/spring-basics.qmd){.external target='_blank'}|
|   | 20 | 08/10/2024 | - Lab#SB08-3 Spring Boot **RestaurantManager**: </br>  (1) Model @Entity Customer & <s>Order</s>   </br> (2) API Rest: @RestController with Swagger  </br> (3) <s>@OrderService and @OrderServiceImpl </s></br> (4) application.properties with **local H2 DB** </br> (5) JPA and H2 </BR>  </br> <i> HW: @Table, @Menu RestController, Interface Service and ServiceImpl, Repository with UUID </i> |  - [Lab#SB08-3](/springboot/sblab8-3.qmd){.external target='_blank'} </BR>  |
|   | 21 | 09/10/2024 |  - Lab#SB08-3 Spring Boot **RestaurantManager**: </br>  (1) Model @Entity Customer & <s>Order</s>   </br> (2) API Rest: @RestController with Swagger  </br> (3) <s>@OrderService and @OrderServiceImpl </s> </br> (4) application.properties with local H2 DB </br> (5) JPA and H2: **JUnit to test DB** </BR> (6)  Query methods JPA</br> - `ResponseEntity` |  - [Lab#SB08-3](/springboot/sblab8-3.qmd){.external target='_blank'} </BR> - [Defining Query Methods](https://docs.spring.io/spring-data/jpa/reference/repositories/query-methods-details.html){.external target='_blank'} </br> - [Query by Example](https://docs.spring.io/spring-data/jpa/reference/repositories/query-by-example.html){.external target='_blank'} </br> - [JPA Query Methods](https://docs.spring.io/spring-data/jpa/reference/jpa/query-methods.html){.external target='_blank'} </br>  - [Spring Boot: JPA & DI](/springboot/boot-concepts-jpa.qmd){.external target='_blank'}|
|   | 22 | 10/10/2024 | - Lab#SB08-3 Spring Boot **RestaurantManager**: </br> (1) Model @Entitiy **Table and Menu** </BR>  <s>(2) Inherence: Order</s></br> (3) application.properties **profiling**: memory/local </br> </br> - Git: `gitTutorial` project </br>  | - [Lab#SB08-3](/springboot/sblab8-3.qmd){.external target='_blank'} </BR>  - [gitTutorial](https://github.com/AlbertProfe/gittutorial){.external target='_blank'} </br> - [Git](/devops/devops-vc-git.qmd){.external target='_blank'} |
|   | 23 | 11/10/2024 | - Lab#SB08-3 Spring Boot **RestaurantManager**: </br> (1) Model @Entitiy Table and Menu </BR>  <s>(2) Inherence: Order</s> </br> (3) .env </br> </br> - Git: `gitTutorial` project </br>  ++ JPA Entities Lifecycle | - [Lab#SB08-3](/springboot/sblab8-3.qmd){.external target='_blank'} </BR>  -[Git Checkout](https://www.atlassian.com/git/tutorials/using-branches/git-checkout){.external target='_blank'} </br> - [JPA Entity Lifecycle Statuses: A Comprehensive Guide](https://medium.com/jpa-java-persistence-api-guide/jpa-entity-lifecycle-statuses-a-comprehensive-guide-e241d68cee58){.external target='_blank'} |
|  #06 | 24 | 14/10/2024 |  - Planning Spring#6 </br> - Lab#SB08-3 Spring Boot RestaurantManager: </br>  (1) JPQL Queries & JUnit Tests </br>  - Lab#SB08-4 Spring Boot **RestaurantManager**: </br>  (1) Model @Entity **Order**   </br> (2) Inherence: Order </br> (3) @ManyToOne relationship </br> (4) ORM </br>(5)  Annotations </br ></br> - <s> `ResponseEntity`</s> </br>  - UML Inherence: Order  | - [Lab#SB08-4](/springboot/sblab8-4.qmd){.external target='_blank'} </BR> - [Library2: API Rest Author Book @OneToMany CRUD with Swagger](https://github.com/AlbertProfe/cifojava2022-3/wiki/Library2:-API-Rest-Author-Book-@OneToMany-CRUD-with-Swagger){.external target='_blank'}</br> - [Spring Boot: Data & DB](/springboot/boot-concepts-data.qmd) </br> - [Spring Boot: JPA & DI](/springboot/boot-concepts-jpa.qmd) </br> -[Spring Boot: JPA Mappings](/springboot/boot-concepts-jpa-2.qmd)  </br>  - [AOP](https://en.wikipedia.org/wiki/Aspect-oriented_programming){.external target='_blank'}</bvr></BR> ![Entity Inheritance](/images/springboot/labsb04-1-entity-inherence-.png){.lightbox}     </br></br>  ![Entity @oneToMany](/images/springboot/labsb08/labsb08-4-onetomay.png){.lightbox}   </br>   |
|   | 25 | 15/10/2024 | - Lab#SB08-4 Spring Boot **RestaurantManager**: </br>  (1) Model @Entity Order & Customer   </br> (2) Inherence: Order > OrderRestaurant </br> (3) @ManyToOne relationship </br> <s>(4) ORM: mappings</s> </br> (5)  Annotations </br>   ++ (6) Unidirectional and Bidirectional </br></br > ++ Serializable |  - [Spring Boot: Data & DB](/springboot/boot-concepts-data.qmd) </br> - [Spring Boot: JPA & DI](/springboot/boot-concepts-jpa.qmd) </br> - [Spring Boot: JPA Mappings](/springboot/boot-concepts-jpa-2.qmd)   </br> - [Lab#SB08-4](/springboot/sblab8-4.qmd){.external target='_blank'} </BR> |
|   | 26 | 16/10/2024 | - Lab#SB08-4 Spring Boot RestaurantManager: </br>  (1) Model @Entity Order, Bookings and Table  </br> (2)  <s>@ManyToMany relationship</s> </br> (3) @ManyToOne relationship </br> <s>(4) ORM</s> </br>(5)  Annotations </br> (6) **Bidirectional relationship 1:n **</br> (7) Casting </br></br> |  - [Spring Boot: Data & DB](/springboot/boot-concepts-data.qmd) </br> - [Spring Boot: JPA & DI](/springboot/boot-concepts-jpa.qmd) </br> - [Spring Boot: JPA Mappings](/springboot/boot-concepts-jpa-2.qmd)   </br> - [Lab#SB08-4](/springboot/sblab8-4.qmd){.external target='_blank'} </BR></br>  ![](/images/springboot/labsb08/lab08-4-uml.png){.lightbox}|
|   | 27 | 17/10/2024 | - Lab#SB08-4 Spring Boot RestaurantManager: </br>  (1) Model @Entity Order   </br>  <s>(2) Inherence: Order implementation  </s></br> (3) Refactor and update `TestCreateOrder()` </br>  (4) API Rest url, controller and faker to **populate whole project**</br></br> - <s>Git: `gitTutorial` project </s> </br> | -  <s>[Lab#SB04-1: JPA Inherence](/springboot/sblab4.qmd)    </br> -[Spring Boot Projects JPA Inherence strategies](https://github.com/AlbertProfe/cifojava2022-6/wiki){.external target='_blank'} </s></br> - [Lab#SB08-4](/springboot/sblab8-4.qmd){.external target='_blank'}  </br> - [commit `85a23ab`](/springboot/sblab8-4.qmd#commit-85a23ab){.external target='_blank'}</BR>  </br>  ![RestaurantManager UML](/images/springboot/labsb08/lab08-4-uml-3.png){.lightbox} </br>  - [Lab#SB08-4](/springboot/sblab8-4.qmd){.external target='_blank'} |
|   | 28 | 18/10/2024 | - Lab#SB08-4 Spring Boot RestaurantManager: </br>  (1) Model @Entity Order & Booking n:m join table   </br> <s>(2) Inherence: Order implementation</s> </br> ++ (3) All classes Model to @Entity  </br></br> - Git: `gitTutorial` project: </br> (1)  reset, revert, remove </br>  ++ (2)  **Script**: Automate `GhSync` Fork to Local  </br>  | - <s>[Lab#SB04-1: JPA Inherence](/springboot/sblab4.qmd) </br> - [Spring Boot Projects JPA Inherence strategies](https://github.com/AlbertProfe/cifojava2022-6/wiki){.external target='_blank'} </s></br>  - [Git Changes](https://www.atlassian.com/es/git/tutorials/undoing-changes){.external target='_blank'}  </br>  - [Lab#SB08-4](/springboot/sblab8-4.qmd){.external target='_blank'} </br></br> - [Whoâ€™s Using Amazon Web Services? [2023]](https://spacelift.io/blog/who-is-using-aws){.external target='_blank'} </br> - [Your appâ€™s front door](https://ngrok.com/){.external target='_blank'} </BR>  - [Choosing the Right DynamoDB Partition Key](https://aws.amazon.com/blogs/database/choosing-the-right-dynamodb-partition-key/){.external target='_blank'} </BR>  - [Automate `GhSync` Fork to Local](https://gist.github.com/AlbertProfe/4f9d89ffe14beb62d166730929070e9a){.external target='_blank'} </br> - [JSON editor](https://jsoncrack.com/editor){.external target='_blank'} /  [WebHookCool](https://webhook.cool){.external target='_blank'}|
|  #07 | 29 | 21/10/2024 | - Lab#SB08-4 Spring Boot RestaurantManager: </br>  (1) Model @Entity Order & Menu   </br> (2) Model @Entity Menu & MenuItems </br> (3) **@ManyToMany relationship**: Order & Menu </br> (4)  Test JUnit: assign </br> (5)  Annotations: @JoinTable  </br> </br>  ++ Agile: </br>  (0) Decision Making: why we do not choose the simple steps?  </br>(1) KEEP IT SIMPLE vs THINK BIG </br> (2) How to create an effective *anti-gas* policy?  |  - [Spring Boot: Data & DB](/springboot/boot-concepts-data.qmd) </br> - [Spring Boot: JPA & DI](/springboot/boot-concepts-jpa.qmd) </br> - [Spring Boot: JPA Mappings](/springboot/boot-concepts-jpa-2.qmd)   </br>  - [Lab#SB08-4](/springboot/sblab8-4.qmd){.external target='_blank'} </BR></br> - [The soviet union delusion](https://albertprofe.dev/scrum/scrum-week5.html#the-soviet-union-delusion){.external target='_blank'} </br> - [Pattern UML Customer-Product](/javase/se-pattern-uml.qmd#customer-product-relationship){.external target='_blank'}</br>   |
|   | 30 | 22/10/2024 | - Lab#SB08-4 Spring Boot RestaurantManager: </br>  (1) Model @Entity Order & Menu   </br> (2) Model @Entity Menu & MenuItems </br> (3) **@ManyToMany relationship**: Order & Menu </br> (4)  Test JUnit: assign many-to-many </br> (5)  Annotations </br> </br> ++ Booking: designing many-to-many join table as @Entity </br>  ++ Order inherence: interface? abstract? |  - [Spring Boot: Data & DB](/springboot/boot-concepts-data.qmd) </br> - [Spring Boot: JPA & DI](/springboot/boot-concepts-jpa.qmd) </br> - [Spring Boot: JPA Mappings](/springboot/boot-concepts-jpa-2.qmd)   </br> - [Lab#SB08-4](/springboot/sblab8-4.qmd){.external target='_blank'} </BR>  </br> ![](/images/ifcd0021-24/-5821235151164785707_121.jpg){.lightbox} |
|   | 31 | 23/10/2024 | - Lab#SB08-4 Spring Boot RestaurantManager: </br>  (1) Model @Entity Customer, Booking and Table   </br> (2) Model **@Entity Booking Join Table** </br> (3) Many-To-Many relationship:Customer, Booking and Table  </br> (4)  Test JUnit: assign </br> (5)  Annotations </br> </br> </br>  ++ Equals : identity by memory address or fields |  - [Spring Boot: Data & DB](/springboot/boot-concepts-data.qmd) </br> - [Spring Boot: JPA & DI](/springboot/boot-concepts-jpa.qmd) </br> - [Spring Boot: JPA Mappings](/springboot/boot-concepts-jpa-2.qmd)   </br> - [Lab#SB08-4](/springboot/sblab8-4.qmd){.external target='_blank'} </BR> </br> - [public void testAddingMenusToOrder() no-equals](https://github.com/AlbertProfe/restaurantManager/blob/bc75ce39d75158ee0e30f287e3d5b030fb8d9591/src/test/java/dev/example/restaurantManager/RelationshipsOrderRestaurantTest.java#L222){.external target='_blank'} </br>  - [public void testAddingMenusToOrder() equals](https://github.com/AlbertProfe/restaurantManager/blob/a85164f009b9cc3b027dcf5c69b54bb5f1d52eda/src/test/java/dev/example/restaurantManager/RelationshipsOrderRestaurantTest.java#L221){.external target='_blank'} </br> - [Heap and Stack](https://nus-cs2030s.github.io/2223-s2/10-heap-stack.html){.external target='_blank'} |
|   | 32 | 24/10/2024 | - Lab#SB08-4 Spring Boot RestaurantManager: </br>  (1) Model @Entity Customer, Booking and Table   </br> (2) Model **@Entity Booking Join Table** </br> (3) Many-To-Many relationship:Customer, Booking and Table  </br> (4)  Test JUnit: assign </br> (5)  Annotations </br> </br> |  - [Spring Boot: Data & DB](/springboot/boot-concepts-data.qmd) </br> - [Spring Boot: JPA & DI](/springboot/boot-concepts-jpa.qmd) </br> - [Spring Boot: JPA Mappings](/springboot/boot-concepts-jpa-2.qmd)   </br> - [Lab#SB08-4](/springboot/sblab8-4.qmd){.external target='_blank'} </BR> </br> - [Cascade and OrphanRemoval](/springboot/sblab8-4.qmd#orphanremoval-and-cascade){.external target='_blank'}  </br>  - [Example OrphanRemoval](/springboot/sblab8-4.qmd#example-student-and-course-entities){.external target='_blank'}|
|   | 33 | 25/10/2024 | - Lab#SB08-4 Spring Boot RestaurantManager: </br> (1)  Model @Entity Customer, Booking and Table   </br> </br>  - Git: `gitTutorial` project: </br> (1)  clean, reset, revert, remove </br>  (2) merge, rebase   </br>   | - [Git Changes](https://www.atlassian.com/es/git/tutorials/undoing-changes){.external target='_blank'}  </br>  - [Lab#SB08-4](/springboot/sblab8-4.qmd){.external target='_blank'} </br></br>  ![](/images/ifcd0021-24/rebase.png){.lightbox} </br> - [Git Rebase](https://www.atlassian.com/git/tutorials/rewriting-history/git-rebase){.external target='_blank'} </br> - [Git CheatSheet](https://www.atlassian.com/git/tutorials/atlassian-git-cheatsheet){.external target='_blank'} </br>  [Merge vs. Rebase](https://www.atlassian.com/git/tutorials/merging-vs-rebasing){.external target='_blank'}  </br> - [Conscious Competence Learning Model](https://cloudassess.com/blog/conscious-competence-learning-model/){.external target='_blank'} |
|  #08 | 34 | 28/10/2024 | - Lab#SB08-4 Spring Boot RestaurantManager: </br> (1) Inherence: Order implementation </br> (2) Order: Interface? Abstract? Record? Sealed?  <br> (3) **Order n:m Menu refactor** </br>  (4) H2-DB to local </br>  (5)  Populate H2-DB data and relationships  </br></br> - <S>Git: `gitTutorial` project: </br> (1)  undo </br>  (2) Rebase vs. Merge  </S> </br> </BR>  ++ DevOps: bash, `curl` |   - [Lab#SB08-4](/springboot/sblab8-4.qmd){.external target='_blank'} </br></br> - [Java meets TypeScript](https://www.youtube.com/watch?v=LeYF1NE3jQ4){.external target='_blank'} </br> - [A Spring Developers Guide to Navigating the Frontend](https://www.youtube.com/watch?v=CdtyvO9jg8E){.external target='_blank'} </br> - [simplify-boot](https://gist.github.com/AlbertProfe/ecdc1184d4d6ed3922d782bbca3459dc){.external target='_blank'} </br> - [GitHub zip code to dropbox](https://gist.github.com/AlbertProfe/316b30c09343cf29d09449e69cfa8502){.external target='_blank'} </br> - [PRA04: Refactoring Many-to-Many Relationship in RestaurantManager](https://github.com/AlbertProfe/restaurantManager/blob/63515bf40324c505a220be743d948d5d4105659c/_PRA/PRA04.md){.external target='_blank'}  |
|   | 35 | 29/10/2024 | - Lab#SB08-4 Spring Boot RestaurantManager: </br> (1) Inherence: Order implementation </br> (2) <s>Order: Interface? Abstract? </s> <br> (3) Order n:m Menu refactor </br>  ++ (4) **API Rest: data structure and nested objects** <s> </br></br>- Git: `gitTutorial` project: </br> (1)  undo </br>  (2) Rebase vs. Merge</s>   </br></br>  ++ API-First paradigm|  - [Lab#SB08-4](/springboot/sblab8-4.qmd){.external target='_blank'} </br></br>  - [Guide to API-first](https://www.postman.com/api-first/){.external target='_blank'}  </br> - [CrackJson](https://jsoncrack.com/){.external target='_blank'}  </br>  - [API rest data structure](/springboot/sblab8-4.qmd#api-rest-data-structure){.external target='_blank'}  |
|   | 36 | 30/10/2024 | - Lab#SB08-4 Spring Boot RestaurantManager: </br> (1) Inherence: Order implementation </br> (2) Order: Interface? Abstract? </br>  (3) @Service and @RestController of all @Entitty </br> (4) Profile **Local H2** </br> (5)  **DataLoader and DataPopulate** </br> </br>  |  - [Lab#SB08-4](/springboot/sblab8-4.qmd){.external target='_blank'} </br> - [DataLoader](https://github.com/AlbertProfe/restaurantManager/blob/6a5958b74c16a495ac4452b0320756b8a3598e4e/src/main/java/dev/example/restaurantManager/utilities/DataLoader.java){.external target='_blank'} </br></br>   ![](/images/springboot/labsb08/labsb08-4-uml.png){.lightbox} |
|   | 37 | 31/10/2024 | - Lab#SB08-4 Spring Boot RestaurantManager: </br> (1) Inherence: Order implementation </br> (2) Order: Interface? Abstract? </br>  (3) @Service and @RestController </br> (4) Inherence: **type strategies to save data** </br>  </br> ++ Implement Order as `Abstract`: </br> (1) **branch**: `feature-order-abstract` | - [Lab#SB08-4](/springboot/sblab8-4.qmd){.external target='_blank'} </br>  - [JPA 1: Dependence Injection](/springboot/boot-concepts-injection.qmd){.external target='_blank'}</br>   - [JPA 2: Mappings](/springboot/boot-concepts-jpa-2.qmd){.external target='_blank'}</br>   - [JPA 3: Relationships](/springboot/boot-concepts-jpa-3.qmd){.external target='_blank'}</br>  - [JPA 4: Queries](/springboot/boot-concepts-jpa-4.qmd){.external target='_blank'}</br>  - [JPA 5: Inherence](/springboot/boot-concepts-jpa-5.qmd){.external target='_blank'}</br>  </BR>  - [JPA Inherence strategies](https://github.com/AlbertProfe/cifojava2022-6/wiki){.external target='_blank'}  </br>  - [OrderRestaurant refactor to abstract class and test createOrdersTest()](https://github.com/AlbertProfe/restaurantManager/tree/ca402fdfd3f82b64850905eaaa08881821bc6a90){.external target='_blank'}  </br> - [@MappedSuperClass](https://camo.githubusercontent.com/edaad3359cdc9de33a4d972aa6e87de37f6865534866254e8d2b5d506c067866/68747470733a2f2f64726976652e676f6f676c652e636f6d2f75633f69643d3174335a315878316e48327632466b534d61475f4a386349696a3452565f336764){.external target='_blank'}  </br>  - [`SINGLE_TABLE`](https://camo.githubusercontent.com/ec2cde1fb13acb2151fd8c33054ed895c27ea87e425159755412dcdcf99c7ab1/68747470733a2f2f64726976652e676f6f676c652e636f6d2f75633f69643d31386e66694b6e5161696d342d6c54443231694277793331334461787476373348){.external target='_blank'}   </br>  - [`JOINED`](https://camo.githubusercontent.com/746e24e3c4e42e9821c4846df58c2023d6b0267d337b554fba72ade3a811120b/68747470733a2f2f64726976652e676f6f676c652e636f6d2f75633f69643d3142707861573766565f6b6834507946576e336934396e473453716e4b59704145){.external target='_blank'}  </br>  - [TABLE_PER_CLASS](https://camo.githubusercontent.com/1f2ef03652d55fdfa773967fa6e1b46442ccc49c9fa33f633de2ea79951612d9/68747470733a2f2f64726976652e676f6f676c652e636f6d2f75633f69643d31697843653273526d4973535f39773762506b6d636479425a6d684b6133477458){.external target='_blank'} |
: Backlog course October 2024 table {tbl-colwidths="[2,2,2,60,34]"}


## November 2024


| Sprint | Day | Date | Topics |  Details Topics |
| -- | -- | -- | -- | -- |
|  #09 | 38 | 04/11/2024 |  - Lab#SB08-4 Spring Boot RestaurantManager: </br> (1) Inherence: Order implementation </br> (2) Inherence: **type strategies to save data** </br> (3) Implement Order as `Abstract`</br> (4) **branch**: `feature-order-abstract` </br> (5)  Test: @Transient & @Transactional </br></br>  - JPA Annotations </br>   - POJO, @Bean and @Entity </br></br>  ++ Java Pagination: </br>  (1) Pageable </br> (2) Page </br> (2) PageRequest |  - [Lab#SB08-4](/springboot/sblab8-4.qmd){.external target='_blank'} </br>  - [JPA 1: Dependency Injection](/springboot/boot-concepts-injection.qmd){.external target='_blank'}</br>   - [JPA 2: Mappings](/springboot/boot-concepts-jpa-2.qmd){.external target='_blank'}</br>   - [JPA 3: Relationships](/springboot/boot-concepts-jpa-3.qmd){.external target='_blank'}</br>  - [JPA 4: Queries](/springboot/boot-concepts-jpa-4.qmd){.external target='_blank'}</br>  - [JPA 5: Inherence](/springboot/boot-concepts-jpa-5.qmd){.external target='_blank'}</br>  - [JPA Annotations](/springboot/boot-concepts-annotations.qmd){.external target='_blank'}</br> </BR>  - [JPA Inherence strategies](https://github.com/AlbertProfe/cifojava2022-6/wiki){.external target='_blank'}  </br>  - [OrderRestaurant refactor > abstract](https://github.com/AlbertProfe/restaurantManager/tree/b1bdddcf75c6772d4fd89d71d8370d778511abfe){.external target='_blank'}  </br> - [@MappedSuperClass](https://camo.githubusercontent.com/edaad3359cdc9de33a4d972aa6e87de37f6865534866254e8d2b5d506c067866/68747470733a2f2f64726976652e676f6f676c652e636f6d2f75633f69643d3174335a315878316e48327632466b534d61475f4a386349696a3452565f336764){.external target='_blank'} / - [`SINGLE_TABLE`](https://camo.githubusercontent.com/ec2cde1fb13acb2151fd8c33054ed895c27ea87e425159755412dcdcf99c7ab1/68747470733a2f2f64726976652e676f6f676c652e636f6d2f75633f69643d31386e66694b6e5161696d342d6c54443231694277793331334461787476373348){.external target='_blank'} / - [`JOINED`](https://camo.githubusercontent.com/746e24e3c4e42e9821c4846df58c2023d6b0267d337b554fba72ade3a811120b/68747470733a2f2f64726976652e676f6f676c652e636f6d2f75633f69643d3142707861573766565f6b6834507946576e336934396e473453716e4b59704145){.external target='_blank'} / - [TABLE_PER_CLASS](https://camo.githubusercontent.com/1f2ef03652d55fdfa773967fa6e1b46442ccc49c9fa33f633de2ea79951612d9/68747470733a2f2f64726976652e676f6f676c652e636f6d2f75633f69643d31697843653273526d4973535f39773762506b6d636479425a6d684b6133477458){.external target='_blank'} </br> </br>  - [Library6](https://github.com/AlbertProfe/cifojava2022-3/tree/master/library6){.external target='_blank'}  / - [BooksPageable](https://github.com/AlbertProfe/BooksPageable){.external target='_blank'}  |
|   | 39 | 05/11/2024 | - Lab#SB08-4 Spring Boot RestaurantManager: </br> (1) Inherence: Order implementation </br> (2) Inherence: **type strategies to save data** </br> (3) Implement Order as `Abstract`</br> (4) **branch**: `feature-order-abstract` </br> (5)  Test: @Transient   </br> </br>  - PRA05: Spring Boot JPA Inheritance and Abstraction </br>| - [Lab#SB08-4](/springboot/sblab8-4.qmd){.external target='_blank'} </br>  - [Interface](/javase/se-concepts-interface.qmd){.external target='_blank'} </br>  - [Inherence](/javase/se-principles-inheritance.qmd){.external target='_blank'}|
|   | 40 | 06/11/2024 | - Scaling Spring Boot: </br> (1) DTO: Data Transfer Object </br>  (2) Auditing  </br>  (3) Pagination </br> <S>(4) Spring Batch </br> (5) Caching </br> (6)  Wrappers </S> </BR> </BR> ++ API Rest Testing: from Bash to JUnit with H2 local server | - [Lab#SB08-5](/springboot/sblab8-5.qmd){.external target='_blank'} </br> - [Scaling](/springboot/boot-concepts-scaling.qmd){.external target='_blank'}  </br> - [Auditing](https://docs.spring.io/spring-data/jpa/reference/auditing.html){.external target='_blank'}  </br> - [Transactionality](https://docs.spring.io/spring-data/jpa/reference/jpa/transactions.html){.external target='_blank'}  </br> - [Paging, Iterating Large Results, Sorting & Limiting](https://docs.spring.io/spring-data/jpa/reference/repositories/query-methods-details.html#repositories.special-parameters){.external target='_blank'} </br></br>  - [DTO Book example](https://docs.google.com/document/d/e/2PACX-1vR3feTl82-sdtkuMAGzAVt2jJ6UHDhUKaKuOeSUah6FC0OkTXrZ8KoBcQDGSA6Kcn255qYk0OQl0pFH/pub){.external target='_blank'} |
|   | 41 | 07/11/2024 |  - Scaling Spring Boot: </br> (1) DTO: Data Transfer Object </br>  (2) Auditing  </br>  (3) Pagination </br> (4) <S>Spring Batch</S> </br> (5) Caching </br> (6)  Wrappers  </br></br>  ++ Test JUnit `Order` <1:n> `Qty`: `OrderRepositoryTest`   | - [Lab#SB08-4: Test Order-Qty](/springboot/sblab8-4.qmd#test-junit){.external target='_blank'} </br>   - [Lab#SB08-5](/springboot/sblab8-5.qmd){.external target='_blank'} </br> </br>  - [Scaling](/springboot/boot-concepts-scaling.qmd){.external target='_blank'}  </br>  - [Auditing](https://docs.spring.io/spring-data/jpa/reference/auditing.html){.external target='_blank'}  </br> - [Transactionality](https://docs.spring.io/spring-data/jpa/reference/jpa/transactions.html){.external target='_blank'}  </br> - [Paging, Iterating Large Results, Sorting & Limiting](https://docs.spring.io/spring-data/jpa/reference/repositories/query-methods-details.html#repositories.special-parameters){.external target='_blank'} </br></br> - [Uncle Bob: good architecture](https://www.youtube.com/watch?v=7eoo5LwJYqI){.external target='_blank'} </br>  - [This is How I Scrape 99% of Sites](https://www.youtube.com/watch?v=ji8F8ppY8bs){.external target='_blank'} |
|   | 42 | 08/11/2024 |  - Git: `gitTutorial` project: </br> (1)  undo </br>  (2) Rebase vs. Merge  </br> </br>  ++ AWS Intro | - [Undoing Commits & Changes ](https://www.atlassian.com/git/tutorials/undoing-changes){.external target='_blank'} </br>  - [Git Repository Management Scripts](https://gist.github.com/AlbertProfe/262beaa9b9965df80241049923a77dee){.external target='_blank'} </br> - [AWS Main Services](https://cdn.hashnode.com/res/hashnode/image/upload/v1623911153290/eREdZW19y.jpeg?w=1600&h=840&fit=crop&crop=entropy&auto=compress,format&format=webp){.external target='_blank'} </br> </br>  |
|  #10 | 43 | 11/11/2024 | - Vaadin / Thymeleaf: </br>  (1) Spring IO Conference UML </br>  (2) Model, DB H2, Properties. JPA   </br>  <s>(3)  JUnit Tests</s> </br>  (4) Vaadin </BR> </BR> ++ **Java Front Options**: </br>  (1) Spring Boot + Rest + React/Angular/Vue  </br>  (2) Thymeleaf & HTMX</br>  (3) Flow: Vaadin </br>  (4) Hilla: React  | - [Lab#SB09-1: SpringIO Conference](/springboot/sblab9-1.qmd){.external target='_blank'} </br>  - [BooksPageable](https://github.com/AlbertProfe/BooksPageable){.external target='_blank'}  </br>  - [Spring IO](https://2025.springio.net/){.external target='_blank'} </br>  - [Scalling: Pagination](/springboot/boot-concepts-scaling.qmd#pagination){.external target='_blank'} </br>  </br>  - [Vaadin Start](https://start.vaadin.com/app){.external target='_blank'} </br>  - [Primefaces](https://www.primefaces.org/){.external target='_blank'}  </br> - [JSF](https://www.ibm.com/docs/es/was/8.5.5?topic=SSEQTP_8.5.5/com.ibm.websphere.nd.multiplatform.doc/ae/cweb_javaserver_faces.htm){.external target='_blank'} </BR>  - [employeeCourse](/springboot/sblab6.qmd){.external target='_blank'}|
|   | 44 | 12/11/2024 | - Vaadin / Thymeleaf  </br>  (1) Spring IO Conference UML </br>  (2) Model, DB H2, Properties. JPA   </br>  <s>(3)  JUnit Tests</s> </br>  (4) Vaadin: **UI components** </br> (5) data.sql </br></br>  - JavaSE: `static` / `final` modifier  </br> </br> ++ intellIJIdea live reload  </br> ++ `@JsonTypeInfo` & `@JsonSubTypes` | - [Lab#SB09-1: SpringIO Conference](/springboot/sblab9-1.qmd){.external target='_blank'} </br> - [RestaurantVaadin: 3333400](/springboot/sblab8-2.qmd) </br> - [BooksPageable](https://github.com/AlbertProfe/BooksPageable){.external target='_blank'}  </br>  - [Spring IO](https://2025.springio.net/){.external target='_blank'}  </br> - [Scalling: Pagination](/springboot/boot-concepts-scaling.qmd#pagination){.external target='_blank'} </br> - [`static` / `final`](/javase/se-concepts-static.qmd) </br> - [Vaadin Components](https://vaadin.com/docs/latest/components){.external target='_blank'}  </br> - [Vaadin Tutorial](https://vaadin.com/docs/latest/getting-started/tutorial){.external target='_blank'}  </br> </br>  ![](/images/ifcd0021-24/live-reload-1.png){.lightbox} </br>  ![](/images/ifcd0021-24/live-reload-2.png){.lightbox} </br></br> - [@JsonTypeInfo](https://github.com/AlbertProfe/restaurantManager/blob/bc3a99e1733f392fc895bb6c4f73026dc9f3e93d/src/main/java/dev/example/restaurantManager/model/MenuItem.java){.external target='_blank'} |
|   | 45 | 13/11/2024 | - Vaadin / Thymeleaf  </br>  (1) Spring IO Conference UML </br>  (2) Model, DB H2, Properties. JPA   </br>  (3)  <s>JUnit Tests</s> </br>  (4) Vaadin: **Routing**  </br> </br>  ++ Web tasks: css, mobile, connect to server, layout, routing, security, deploy, model, business logic, SSR and CSR, components </br>    ++ Vaadin Hilla: `autocrud`  | - [RestaurantVaadin: 33b1284](/springboot/sblab8-2.qmd) </br></br>  - [Atmosphere](https://github.com/Atmosphere/atmosphere){.external target='_blank'}  </br>  - [Vaadin Chat GitHub](https://github.com/vaadin/tutorial){.external target='_blank'}  </br> - [How to deploy](https://vaadin.com/docs/latest/getting-started/tutorial/deployment){.external target='_blank'}  </br> - [fly.io](https://fly.io/){.external target='_blank'}  </br>  </br>  - [Autocrud](https://vaadin.com/docs/latest/components/auto-crud){.external target='_blank'} </br>  - [Autocrud Sandbox](https://vaadin.com/docs/latest/example?path=component/auto-crud/react/auto-crud-basic.tsx){.external target='_blank'}   |
|   | 46 | 14/11/2024 | - Vaadin   </br>  (1) Security: **Login**</br> (2) Binding: Client <-> Server  </br></br> - Websockets </br>  (1) HTTP  </br>  (2) Client: Instance methods | - [RestaurantVaadin: Login](/springboot/sblab8-2.qmd) </br>    - [Securing a Web Application](https://spring.io/guides/gs/securing-web){.external target='_blank'}  </br> - [Spring Security6.3.4](https://spring.io/projects/spring-security){.external target='_blank'} </br></br> - [Lab#RE05-1: Websockets](/reactjs/rjslab5-1.qmd){.external target='_blank'} </br> - [Chat: wiki](https://github.com/AlbertProfe/Chat/wiki){.external target='_blank'} </br> - [Network: Websocket](/devops/devops-network-websocket.qmd){.external target='_blank'} </br>  |
|   | 47 | 15/11/2024 | - Websockets: </br> (1)  Server: AWS / Spring Boot </br> (2) Client: React   </br> </br>  ++ How To Communicate: target, value, engagement, ratio noise/signal, keywords, core, pitfalls, metrics  </br>   ++ DevOps: Linux, Scripting (Bash/Py), Networking, Software Cycle   | - [Lab#RE05-1: Websockets](/reactjs/rjslab5-1.qmd){.external target='_blank'}  </br> - [Chat: wiki](https://github.com/AlbertProfe/Chat/wiki){.external target='_blank'} </br> - [Network: Websocket](/devops/devops-network-websocket.qmd){.external target='_blank'} </br></br> ![](https://miro.medium.com/v2/resize:fit:720/format:webp/1*NlBcZ_W0hYx1FJtdndRduw.jpeg){.lightbox}  </br></br>  - [spring.io](https://spring.io/){.external target='_blank'}  </br> - [Spring Boot Courses](https://spring.academy/courses){.external target='_blank'} </br> - [Control your AWS costs](https://aws.amazon.com/getting-started/hands-on/control-your-costs-free-tier-budgets/){.external target='_blank'} </br>  - [napkin ai](https://app.napkin.ai/){.external target='_blank'}|
|   | 48 | 18/11/2024 | - FCOO03: FormaciÃ³ ComplementÃ ria (InserciÃ³n laboral, sensibilizaciÃ³n medioambiental y en la igualdad de gÃ©nero) | - [FCOO03](https://sede.sepe.gob.es/es/portaltrabaja/resources/pdf/especialidades/FCOO03.pdf){.external target='_blank'} </br> </br>  - [OpenStack](https://www.openstack.org/){.external target='_blank'} </br>  - [Vaadin Collaboration Kit](https://vaadin.com/collaboration){.external target='_blank'} </br>  - [Collaboration Engine Sampler](https://ce-sampler.demo.vaadin.com/){.external target='_blank'} </br>  - [Chat Project: AWS and WS](https://github.com/AlbertProfe/Chat/wiki){.external target='_blank'}  </BR>  - [WebSocketKing](https://websocketking.com/){.external target='_blank'} </br>  - [Spring Boot Stomp Library8](https://github.com/AlbertProfe/cifojava2022-5/tree/e3b3dc74bf7368c4228bcee4f9e706ac11a30fd1/library8){.external target='_blank'}|
|   | 49 | 19/11/2024 | - FCOO03: FormaciÃ³ ComplementÃ ria (InserciÃ³n laboral, sensibilizaciÃ³n medioambiental y en la igualdad de gÃ©nero)  | - [FCOO03](https://sede.sepe.gob.es/es/portaltrabaja/resources/pdf/especialidades/FCOO03.pdf){.external target='_blank'} |
: Backlog course November 2024 table {tbl-colwidths="[2,2,2,60,34]"}



:::

