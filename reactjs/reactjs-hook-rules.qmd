---
title: "React JS: Rules of Hooks"
subtitle: ReactJS Rules of Hooks
author: albertprofe
date: "06/01/2021"
date-modified: last-modified
date-format: full
description: description
categories: [reactjs, hooks, rules]
toc: true
number-sections: true
format:
  html
---

::: {.summary}

ðŸ“˜ **Rules of Hooks**

`Hooks` are a new addition in `React 16.8`. They let you use state and other React features w**ithout writing a class.**


:::

</br>

Reference: [Rules of Hooks](https://legacy.reactjs.org/docs/hooks-rules.html){.external}

## Overview

`Hooks` are JavaScript functions, but you need to follow two rules when using them. We provide a linter plugin to enforce these rules automatically:


### Rule #1: Only Call Hooks at the Top Level

> Donâ€™t call Hooks inside loops, conditions, or nested functions. 

Instead, always use Hooks at the top level of your React function, before any early returns.

By following this rule, you ensure that Hooks are called in the same order each time a component renders. 

Thatâ€™s what allows React to correctly preserve the state of Hooks between multiple useState and useEffect calls.

### Rule #2: Only Call Hooks from React Functions

> Donâ€™t call Hooks from regular JavaScript functions. Instead, you can:

- Call `Hooks` **from React function components**.
- Call `Hooks` `from custom Hooks` (weâ€™ll learn about them on the next page).


## ESLint Plugin

React team released an `ESLint plugin` called `eslint-plugin-react-hooks` that enforces these two rules. You can add this plugin to your project if youâ€™d like to try it:

This plugin is included by default in `Create React App.`

```js
npm install eslint-plugin-react-hooks --save-dev
```

```js
// Your ESLint configuration
{
  "plugins": [
    // ...
    "react-hooks"
  ],
  "rules": {
    // ...
    "react-hooks/rules-of-hooks": "error", // Checks rules of Hooks
    "react-hooks/exhaustive-deps": "warn" // Checks effect dependencies
  }
}
```

## Cheatsheet by @_georgemoller

![Hooks: useState, useReducer, useContext ](/images/reactjs/IMG_0931.JPG){width=80%}

![Hooks: useEffect, useLayoutEffect](/images/reactjs/IMG_0932.JPG){width=80%}

![Hooks: useInsertionEffect, useSyncExternalStore](/images/reactjs/IMG_0933.JPG){width=80%}

![Hooks: useCallback, useMemo](/images/reactjs/IMG_0934.JPG){width=80%}

![Hooks: useRef, useImperativeHandle](/images/reactjs/IMG_0935.JPG){width=80%}

![Hooks: useId, useDebugValue](/images/reactjs/IMG_0936.JPG){width=80%}

![Hooks: useEvents, useDeferredValue, useTransition](/images/reactjs/IMG_0937.JPG){width=80%}



