---
title: "IFCD0210 Product Backlog"
categories: [ifcd0210, backlog]
---


![Backlog course](/images/home/backlog.jpg){width="30%"}

::: {.summary}

- [December 2022](/ifcd0210/ifcd0210backlog-product.qmd#december-2022)
- [January 2023](/ifcd0210/ifcd0210backlog-product.qmd#january-2023)
- [February 2023](/ifcd0210/ifcd0210backlog-product.qmd#february-2023)
- [March 2023](/ifcd0210/ifcd0210backlog-product.qmd#march-2023)
- [April 2023](/ifcd0210/ifcd0210backlog-product.qmd#april-2023)
- [May 2023](/ifcd0210/ifcd0210backlog-product.qmd#may-2023)
- [June 2023](/ifcd0210/ifcd0210backlog-product.qmd#june-2023)
- [July 2023](/ifcd0210/ifcd0210backlog-product.qmd#july-2023)

:::

::: {.column-page-right}

## December 2022


| Sprint | Day | Date | Topics |  Details Topics |
| -- | -- | -- | -- | -- |
| **#1** | **1** | **12/12/2022** | **- Introduction to course IFCD0210</br> - Setting of all tools we are going to need** | - |
|  | 2 | 13/12/2022 | - Quarto create and Publish in GitHub</br> - Create VM and IDEs - Accounts - MOOC | - |
|  | 3 | 14/12/2022 | - Linux VM VirtualBox over Windows</br> - What is a Dependency Management, Maven | - |
|  | 4 | 15/12/2022 | - Quarto create and Publish in GitHub with adavnced tools | - |
|  | 5 | 16/12/2022 | - Create Java Maven Project: JUnit</br> - What is Java SE, EE and Spring MVC, Boot</br> - Create classes| - |
| **#2** | **6** | **19/12/2022** | **Create Java Maven Project: Git - Why scope is so important in Java** | - |
|  | 7 | 20/12/2022 | - Introduction to MVC Pattern | - |
|  | 8 | 21/12/2022 | - Create Java Maven Project: Classes</br> - Tag & Little-Cube are our dear friends | - |
|  | 9 | 22/12/2022 | - Introduction to React JS Framework | - |
: Backlog course December 2022 table {tbl-colwidths="[2,2,2,60,34]"}

## January 2023

| Sprint | Day | Date | Topics |  Details Topics |
| -- | -- | -- | -- | -- |
| **#3** | **10** | **09/01** | **- Different approaches to complex problems are crucial to solve it</br>- How to manage large volumes: quarto</br>- How to stay in class: ask, interrupt, explain new ideas, detect mistakes, connect** | **[Bash, Pipes](/linux/linux-what-bash.qmd)</br>[Learn](/learning/learning-how-tips.qmd#put-your-soul-now)** |
|  | 11 | 10/01 | - How to create a Maven Java Project with TDD in Mind</br> - What could go wrong when create a Maven Project | [TDD, JUnit](/javase/se-concepts-tdd.qmd)</br> [Maven Java](/javase/se-concepts-createproject.qmd )</br>[Lab#SE01-1](/javase/selab2-1.qmd)|
|  | 12 | 11/01 | - What is Model in Java</br> - Why model is so important</br> - All begins in Model</br> - How to create a model (1) Class Candidates (2) Validated Class (3) Relationships | [Java Classes and Objects](/javase/se-concepts-objects.qmd)</br>[Pattern UML](/javase/se-pattern-uml.qmd) |
|  | 13 | 12/01 | - Coupling and DD defines from first line even to Deploy</br> - Plan a Project: sprint 0 and SCRUM</br> - Even name a variable is important | [Coupling](/javase/se-concepts-coupling.qmd)</br>[Lab#SE02-4](/javase/selab2-4.qmd) |
|  | 14 | 13/01 | - Time Management</br> -  Object Creation: <b>new</b> and @Test</br> - Nested objects in Java are not easy</br> - Tags & Little-cube are our friends | [Lab#SE02-1](/javase/selab2-1.qmd)</br>[Time Managemnt](/ifcd0210/ifcd0210calendar.qmd#time-management)</br>[Maven Project to GitHub: git init](/javase/se-concepts-projectgit.qmd#maven-project-push-to-github-cli-git) |
| **#4** | **15** | **16/01** | **+ Object Creation: nested Objects in Java</br> + Movie-Reviews-Review-Critic</br>+ @Test and debug</br> - <s>Java Principles</s><br> ++ Within which <b>scope</b> (1) creation object: new, (2) operations and methods and (3) sending-parameters by callings there must be?** | **[Lab#SE02-1](/javase/selab2-1.qmd)</br>[Markdown in IntellJIdea Mermaid](https://www.jetbrains.com/help/idea/markdown.html#table){.external} & [Mermaid](https://mermaid.js.org/syntax/classDiagram.html){.external} </br>[Principles](/javase/se-what-principles.qmd) / [Objects and class](/javase/se-concepts-objects.qmd)</br>[MovieManager Code](https://github.com/AlbertProfe/CifoJava2023/tree/c7832d6b556668d391bedf3750dd75e696dcc5e3/MovieManger){.external}** |
|  | 16 | 17/01 | + MovieManager static or non-static</br> - <s>How to send data within Java</s></br> + Movie-Reviews-Review-Critic</br> + Java Principles </br> - <s>Project structure: .gitignore, readme.md, uml.md</s></br> ++ Decision making at Model: (1) Composition? (2) Inherence? (3) Use? (4) Is Class? sure? (5) static/non-static? (6) Domains? (7) Coupling? (8) Interface/Abstract (9) Multiplicity (10) Packages</br> ++ How to write a comment: What? For what? How?| [Lab#SE02-2](/javase/selab2-2.qmd)</br>[.gitignore](https://git-scm.com/docs/gitignore){.external} / [.gitignore not working](https://stackoverflow.com/questions/25436312/gitignore-not-working){.external}</br>[Objects and class](/javase/se-concepts-objects.qmd) / [static](/javase/se-concepts-static.qmd)</br>[MovieManager Code](https://github.com/AlbertProfe/CifoJava2023/tree/f62b9a176493b6189efd3d55d4b05c1ec5b4fb2e/MovieManger){.external} |
|  | 17 | 18/01 | + Relationships and Multiplicity: onetoone, onetomany, manytomany</br> - <s>Model First: customer/product</s></br> - <s>Project structure: .gitignore, readme.md, uml.md</s> </br> ++ Why Multiplicity? (1) People at same page (2) Identify killing problems: pavoland (3) avoid future problems and correct them before code (4) Huge improvement on understanding THE problem (5) documentation</br>| [Multiplicity](/javase/se-pattern-uml.qmd#entity-relationship-types-multiplicity)</br>[Mermaid Class Diagram UML](https://mermaid.js.org/syntax/classDiagram.html){.external}</br> [Customer/Product example](https://albertprofe.github.io/wiki/javase/se-pattern-uml.html#example-customer-product){.external}</br> [Get your team on the same page](https://theteamcanvas.com/){.external} |
|  | 18 | 19/01 | + 1:n / onetomany / @OneToMany</br> + Example (1) oneToMany: Director/Movie</br> + Project structure: .gitignore, readme.md, uml.md</br> ++ Intro **Albertus' Dilemma** | [Java Persistence](https://en.wikibooks.org/wiki/Java_Persistence){.external}</br> [MovieManager Code](https://github.com/AlbertProfe/CifoJava2023/tree/6f962d23a4fae67099ee766f2aa2a17e60a46cd7/MovieManger){.external}</br> [Domain Driven Design — method and process agnostic](https://www.linkedin.com/pulse/domain-driven-design-method-process-agnostic-angelo-hulshout-bit){.external}</br> |
|  | 19 | 20/01 |  + How to approach a complex software architecture (software lifecycle meta-domains): (1) project (2) domains-DDD (3) UML (4) coding  </br> + Decision-making & Albertus' Dilemma</br>+ SCRUM Projects: (1) Management (2) Meetings Rules (3) Mistakes (4) Roles (5) Iterations</br> + spaceX: all requirements are dumb</br> | [Software lifecycle](/index.qmd#lifecycle-software-(2022))</br> [SCRUM](/scrum/scrum-what-concepts.qmd)</br> [All requirements are dumb](https://modelthinkers.com/mental-model/musks-5-step-design-process){.external}</br> [SpaceX’s first Starship SN5 150m hop test](https://www.youtube.com/watch?v=TYAi2JJItgY){.external}  |
| **#5** | **20**| **23/01** | **+ Top/Down or Down/Top project approach and build-up</br> + Project/Domain-DDD/UML/microProgramming</br> + MovieManager Domains & Packages, connecting classes: general plan  (1/3)</br> - <s>Test interactivity</s></br>**  | **[Packages](/javase/se-concepts-package.qmd)</br> [Movie Manager (with errors: very unusual and not clean)](https://github.com/AlbertProfe/CifoJava2023/tree/6e54545494594c6ff36fe063afc02a98b34d68d0){.external}</br> [Top-down and bottom-up design](https://en.wikipedia.org/wiki/Top-down_and_bottom-up_design){.external}</br>**  |
|  | 21 | 24/01 | + MovieManager Domains & Packages, connecting classes: static/non-static and reusable method/class (2/3)</br> + Hashmap</br> + Try and Catch</br> + Test interactivity</br> | [Movie Manager](https://github.com/AlbertProfe/CifoJava2023/tree/075af8cb656849e32f202d929db86ee86024cc67){.external}</br>  [HashMap w3school](https://www.w3schools.com/java/java_hashmap.asp){.external}</br> [Lab#SE02-5 Test Input Console](/javase/selab2-5.qmd#core-classes)</br> [Lab#SE02-4 Try and Catch](/javase/selab2-4.qmd#trycatch-for-wrong-inputs)</br> |
|  | 22 | 25/01 |  ++ How to code: (1) User-story (2) New Feature (How it fits with existing UML) (3) pseudo-code (4) code acutal typing</br> + MovieManager Domains & Packages, connecting classes (3/3):</br> (1) HashMap movies and CRUD operations,</br> (2) createAndAddMovieToStore,</br> <s>(3) HashMap testMovies</s> </br> (4) testCreateAndAddMovieToStoreInputConsole</br> | [Movie Manager](https://github.com/AlbertProfe/CifoJava2023/tree/5fe2990429323fd800fd614a778c17961240a360){.external}</br> [Simulate Input by console](/javase/selab2-5.qmd#core-classes) |
|  | 23 | 26/01 |  + MovieManager, Test and CRUD (1/2)</br> (1) HashMap Movies CRUD (2) implement test by a simulated console: createMovie and deleteMovie tests (3) document test with html (4) manager CRUD implement<br>  + <s>Inherence / Interface / Abstract Class</s></br> - <s>git</s></br> |  [Movie Manager Simulate input (1/2)](https://github.com/AlbertProfe/CifoJava2023/tree/f4dcc5e1718fb4b014b2fac21f481f624c4ed666){.external}</br>  [Class Test <b>Create</b> Movie](https://github.com/AlbertProfe/CifoJava2023/blob/f4dcc5e1718fb4b014b2fac21f481f624c4ed666/MovieManger/src/test/java/org/example/crudMovieByConsoleTest.java#L16){.external}</br>  [Movie Manager Simulate input (2/2)](https://github.com/AlbertProfe/CifoJava2023/tree/6c42c29085db0bef19a8ee780343c2198b1113c3){.external}</br> [Class Test <b>Delete</b> Movie](https://github.com/AlbertProfe/CifoJava2023/blob/6c42c29085db0bef19a8ee780343c2198b1113c3/MovieManger/src/test/java/org/example/crudMovieByConsoleTest.java#L39){.external}|
|  | 24 | 27/01 | + MovieManager, CRUD & update (2/2)</br> + SCRUM + Vocabulary (writting)</br> + Book: SRE | [Movie Manager Update CRUD](https://github.com/AlbertProfe/CifoJava2023/tree/96bf8a96998809a8f5ee1acea7fc9f42139a120c){.external}</br> [Class MovieManager <b>Update</b> Movie](https://github.com/AlbertProfe/CifoJava2023/blob/96bf8a96998809a8f5ee1acea7fc9f42139a120c/MovieManger/src/main/java/org/example/manager/MovieManager.java#L37){.external}</br> [SRE](/books/sre.qmd) </br> |
| **#6** | **25** | 3**0/01** | **+ Intro to CSS, OJS, Engines and tools</br> + Example (3) manyToMany: memberLibrary/Book, Customer/Product, Director/Movie</br>** | **[manytomany](/javase/se-pattern-uml.qmd#many-to-many-(nm))</br> [CSS and Engines Resources](/markup/resources.qmd#css)**  |
|  | 26 | 31/01 | + Library Model Basic/Large</br> + Reuse Movie/Review as a Template </br> + Start with LibraryProject: lombok (create 100 users/books), use-case, refactor, maven, dependencies, DDD, UML and core classes, borrow core-operation, managers, test, mockup, git, common lenguage </br>  | [Lab#SE00-3 Basic](/javase/selab0-3.qmd#basic-uml) </br>[Lab#SE00-3 Large](/javase/selab0-3.qmd#large-uml) </br> [LibraryProject](https://github.com/AlbertProfe/CifoJava2023/tree/master/LibraryProject){.external}  </br> |
|  | 27 | 01/02 | + LibraryProject:</br> (1) define priorities: tasks and kanban</br> (2) code Faker create Users </br> <s>(3) code test Borrow a book from console</s> </br> (4) UUID method </br> |  [Lab#SE03-1 UML](/javase/selab3-1.qmd) </br> [Lab#SE03-2 Sprint Zero](/javase/selab3-2.qmd) </br>  ![Library Project key-words sprint zero](/images/javase/libraryproject_board.jpg){#library-board width="40%"} </br> [LibraryProject](https://github.com/AlbertProfe/CifoJava2023/tree/6527f471c8cef1606e20d80cb4ca9fb9f9445f48/LibraryProject){.external} <br> |
|  | 28 | 02/02 | + MVC: Api Rest</br> + Quarto: using API Rest with D3.js</br>  + git</br> | [Quarto API REST](/markup/markup-quarto-api-rest.qmd)</br> [D3.js](https://d3js.org/){.external} </br>  [Observable JavaScript](https://observablehq.com/@observablehq/observable-javascript){.external} |
|  | 29 | 03/02 | + SCRUM: delete (step 2 spaceX)</br> + Vocabulary</br> + <b>Four-Hats</b>: Project/DDD/UML/code</br>+ Cifo Java AppWeb Service Infrastructure: servers, services, network, URL | [Cifo JAVA AppWeb Infrastructure](https://cifoweb.dev){.external}</br> [Prioritize When You Wear Multiple Hats](https://www.liquidplanner.com/blog/ask-a-pm-how-to-prioritize-when-you-wear-multiple-hats/){.external} |
: Backlog course January 2023 table {tbl-colwidths="[2,2,2,60,34]"}



## February 2023

| Sprint | Day | Date | Topics |  Details Topics |
| -- | -- | -- | -- | -- |
| **#7** | **30** | **06/02** | **-** | **-** |
|  | 31 | 07/02 | - | - |
|  | 32 | 08/02 | + LibraryProject:</br> (1) create GitHub Projects and Kanban</br> (2) create tasks Sprint 1 </br> (3) discuss about how to make user/book/borrow interface management  </br> (4) discuss Borrow object test</br>  | [LibraryProject](https://github.com/AlbertProfe/CifoJava2023/tree/12a97938cc4a0718ae66f08075a402af13354dce/LibraryProject){.external} |
|  | 33 | 09/02 | + Library Model Basic/Large</br> + Example (3) manyToMany: memberLibrary/Book, Customer/Product, Director/Movie</br> + LibraryProject</br> - <s>Inherence / Interface / Abstract Class</s> </br> ++ Optional | [Lab#SE00-4](/javase/selab0-4.qmd) </br> [Inherence](/javase/se-principles-inheritance.qmd)</br> [Lab#SE00-3 Basic](/javase/selab0-3.qmd#basic-uml) </br>[Lab#SE00-3 Large](/javase/selab0-3.qmd#large-uml) </br>  [LibraryProject](https://github.com/AlbertProfe/CifoJava2023/tree/492e602a2e7dbd672adf7ff47287cd6ba5a02e07/LibraryProject){.external}</br>  [Optional](https://github.com/AlbertProfe/CifoJava2023/blob/492e602a2e7dbd672adf7ff47287cd6ba5a02e07/LibraryProject/src/test/java/org/example/createObjectsTest.java#L97){.external} </br> |
|  | 34 | 10/02 | + LibraryProject: sprint 1</br> - <s>Spring Boot Intro</br>  - Spring Rest and Web</br> - Thymeleaf </s></br> ++ Albertu's Dilemma </br > + Inherence / Interface / Abstract Class| [LibraryProject](https://github.com/AlbertProfe/CifoJava2023/tree/ebca4fe77c3ef73bd476d393a0654930c5fd34cb/LibraryProject){.external} </br>[Generic Types](https://docs.oracle.com/javase/tutorial/java/generics/types.html){.external} </br> [Interface](https://docs.oracle.com/javase/tutorial/java/concepts/interface.html){.external} </br> [Interface w3 schools](https://www.w3schools.com/java/java_interface.asp){.external} |
| #8 | 35 | 13/02 | + Sprint2: pick up tasks from Product Backlog </br>+ LibraryProject:</br> (1) testBorrowUI </br> (2) bookManager </br> (3) returns </br> (4) storage </br> + Spring Boot: </br> (1) Intro & project structure/folder tree</br>  (2) Spring Rest and Web</br> (3) Thymeleaf </br> (4) Resources: books and webs </br>  | [LibraryProject](https://github.com/AlbertProfe/CifoJava2023/tree/c8b04b02e4d3c9407a92fa3211ee34a6eb56e935/LibraryProject){.external} <br>  [MyFirstSpring](https://github.com/AlbertProfe/CifoJava2023/tree/c8b04b02e4d3c9407a92fa3211ee34a6eb56e935/myFirstSpring){.external} <br> [Spring Boot: create a Maven Project](/springboot/boot-what-create.qmd) </br> ![Sprint1 Product Backlog](/images/javase/Sprint1.jpg){width="30%"} |
|  | 36 | 14/02 | + LibraryProject:</br> <s>(1) borrowManager: list and get statusBorrow</s> </br> (2) returnBook: pseudo-code</br> ++ use-story > use-case > functional-diagram > pseudo-code > code  |[LibraryProject Approach 1](https://github.com/AlbertProfe/CifoJava2023/tree/a2e9c9911f04b8708e1bdf2b9de55300046b70aa/LibraryProject){.external} </br>  [LibraryProject Approach 1 with several methods](https://github.com/AlbertProfe/CifoJava2023/tree/a28d35b6bb99e70cd8f7dd0eace56edc2c4702df/LibraryProject){.external} </br> |
|  | 37 | 15/02 | + LibraryProject:</br>  (1) returnBook: code branch-pattern (to-do)</br> (2) returnBook: codee branch-moreHashmaps (to-do)</br> (3) returnBook: code branch-bidirectional (to-do)</br> **(3) returnBook: code branch-handlerOptions**</br> ++ Make a *brief study* of the main efficient/relevant (three or four?) solutions and approaches to our problem in order to understand it, find out the **optimus solution**, solve it and eventually code it. </br> ++ Create one branch for attempt/aproach (to-do)</br>| [LibraryProject branch-handlerOptions `pseudo` ](https://github.com/AlbertProfe/CifoJava2023/tree/79540cb6e18c8480b8c618d6d22901a36fc2fa58/LibraryProject){.external} </br>   [LibraryProject branch-handlerOptions `finished`](https://github.com/AlbertProfe/CifoJava2023/tree/6d30ebfc6c082356ae566a2bba875fc304715d4e/LibraryProject){.external} </br></br> ![](/images/javase/how-to-code.jpg){width="30%"} |
|  | 38 | 16/02 | - LibraryProject:</br> <s>(1) Inherence Person,Publication </s></br> (2) createBorrows (fake) </br> (3) pickBorrowByUser (basic-polish bookReturn) </br> (4) findBorrowsByUser </br> (5) switch (book, user, borrow) </br> | [LibraryProject branch-handlerOptions `fakeBorrows`](https://github.com/AlbertProfe/CifoJava2023/tree/fc58efe226075da55ae19845a31cc58bfe1e8e1a/LibraryProjecT){.external}  </br> [Java 8](/javase/se-concepts-java8.qmd) </br> [2](https://github.com/AlbertProfe/CifoJava2023/blob/fc58efe226075da55ae19845a31cc58bfe1e8e1a/LibraryProject/src/main/java/org/example/manager/BorrowManager.java#L16){.external}, [3](https://github.com/AlbertProfe/CifoJava2023/blob/fc58efe226075da55ae19845a31cc58bfe1e8e1a/LibraryProject/src/main/java/org/example/manager/BorrowManager.java#L161){.external}, [4](https://github.com/AlbertProfe/CifoJava2023/blob/fc58efe226075da55ae19845a31cc58bfe1e8e1a/LibraryProject/src/main/java/org/example/manager/BorrowManager.java#L205){.external}, [5](https://github.com/AlbertProfe/CifoJava2023/blob/fc58efe226075da55ae19845a31cc58bfe1e8e1a/LibraryProject/src/main/java/org/example/manager/BorrowManager.java#L107){.external}</br> |
|  | 39 | 17/02 | - LibraryProject: </br> (1) core-functional return-book use-case </br>- SCRUM: </br> (1) Albertus' Dilemma: burnout flag </br> (2) Why execution is so difficult? </br><s>(3) Writting </s></br> (4) SpaceX: step 2 and further </br> (5) Motivation or Purpose </br>  | [Discussion: use case return a book](/images/javase/bookReturnByUser2.png) </br></br> [Burn out](/books/burnout.qmd) and [Relaxation](/books/relaxationrevolution.qmd)</br> [Execution: The Discipline of Getting Things Done](/books/execution.qmd)  </br>[Motivation?](https://positivepsychology.com/what-is-motivation/){.external} vs. [Less Wrong](https://www.lesswrong.com/){.external} </br> [dukkha](https://en.wikipedia.org/wiki/Du%E1%B8%A5kha){.external}|
| #9 | 40 | 20/01 | + LibraryProject:</br> (0) plan Sprint </br> (1) brief-study returnBook </br> (2) branch returnBook </br> (3) Inherence Person </br> + Git: <br> (1) Remote/Local (just one user)</br> (2) Basic Operations: push, pull, commit, add, clone </br> (3) watchdog: writting commits, location, document, time</br>| [LibraryProject ](https://github.com/AlbertProfe/CifoJava2023/tree/1413c47c8aa8e5ed6ec4eb6ff4600df5dbfb28a8/LibraryProject){.external} </br> [Learn Git](https://learngitbranching.js.org/){.external} </br> ![](/images/javase/git_branch.png){width="45%"} |
|  | 41 | 21/01 | + LibraryProject:</br> (1) Inherence: Member and/or LibraryMember </br> (2) Is Author a Member? </br> (3) Member is Abstract/Interface/Regular class? </br> (4) How will we call Managers? </br><s> - Quarto </s></br>| [core-General UML Proposal](/javase/selab3-3.qmd) </br> ![user-librarian Inherence UML](/images/javase/uml_user-librarian_inherence.png){width="80%"}|
|  | 42 | 22/02 | + Spring Boot: </br> (1) Book @Controller  </br> (2) Book @Service </br> (3) Book CRUD </br> (4) HTML Thymeleaf </br> (5) H2 DataBase Local Source and Application.properties</br> - <s>Git</s> </br>  | [Lab#SB02-Library5 Code](https://github.com/AlbertProfe/cifojava2022-3/tree/master/library5){.external} </br> [Lab#SB02-Library5 Docs](https://github.com/AlbertProfe/cifojava2022-3/wiki/Library5:-ThymeLeaf-Web-Project){.external} </br> [Create H2 DB Spring Boot](/springboot/boot-what-create-th-h2.qmd) </br> [Create Spring Boot](/springboot/boot-what-create.qmd) </br>|
|  | 43 | 23/02 | - <s>LibraryProject: </br>  (1) finish core use-cases </br> (2) finish main UML</s></br> ++ LibraryManagement: </br> (1) What is Spring Boot? </br> (2) How does it works? </br> (3) What are the main elements of Spring Boot? </br> (4) What is Thymeleaf? </br> (5) What are server-renders and template engines? </br> ++ Deliveries MF01 </br> | [Thymeleaf](https://www.thymeleaf.org/){.external} </br> [H2 DB](https://www.h2database.com/html/main.html){.external} </br> [Spring Boot Reference Documentation](https://docs.spring.io/spring-boot/docs/current/reference/html/){.external}</br> [Spring init](https://start.spring.io/){.external} </br>  [Building an App with Spring Boot](https://spring.io/guides/gs/spring-boot/){.external}  </br></BR>  [Create Spring Boot](/springboot/boot-what-create-th-h2.qmd) </br>  [Create Spring Boot H2 DB and TH](/springboot/boot-what-create-th-h2.qmd) </br>[Lab#SB00-1](/springboot/sblab0-1.qmd)  </br> </br> |
|  | 44 | 24/02 |  - Deliveries MF01</br> - Quarto </br> - Spring Boot: </br> (1) Summary week </br>  - SCRUM: </br> <s>(1) Motivation/Purpose 2 </s></br> (2) Burn Out multitasking, several hats </br>  (3) spaceX beyond Scrum | - |
| #10 | 45 | 27/02 | + LibraryManagement: </br> (0) Mock-up  </br> <s>(1) Tree-Folder: packages </s> </br> (2) Book: @Entity, @Repository, @Controller, @Service  </br> (3) Thymelaf </br>  + Spring Boot: request-response Cycle | [Spring Boot H2DB TH](/springboot/boot-what-create-th-h2.qmd) </br>[Spring Boot: cycle](/springboot/boot-what-cycle.qmd) </br> [Lab#SB00-1](/springboot/sblab0-1.qmd) </br></br> Auto-reload compiler:</br>![Auto-reload compiler: Advanced Settings](/images/springboot/compiler.png){width="20%"}  ![Auto-reload compiler: build project automatically](/images/springboot/compiller2.png){width="20%"} </br> |
|  | 46 | 28/02 | + View-Controller </br> (1) Controller </br> (2) View  </br> (3) Example| [Controller](/springboot/boot-concepts-controller.qmd) - [View](/springboot/boot-concepts-view.qmd) </br> [Auto-reload compiler](/springboot/boot-what-create-th-h2.qmd#auto-reload-compiler) </br> [Tutorial: Using Thymeleaf](https://www.thymeleaf.org/doc/tutorials/3.0/usingthymeleaf.html){.external} |
|  | 47 | 01/03 | + View-Controller </br> (1) @Service and Dependency Injection </br>(2) HashMap fake @Repository </br>(3) <b>request-response scope</b>  </br>  (4) redirect: </br>  (5) messages.properties </br>  (6)  CRUD operations draft and pseudo-code </br><s>LibraryProject: </br>  (1) finish core use-cases </br> (2) finish main UML</s></br> | [controllerView Project](https://github.com/AlbertProfe/CifoJava2023/tree/e17d40231644aca79c90ff9205f323536495d8d4/controllerView){.external} </br> [render controllerView](/images/springboot/th_controller_view.png) </br> [resources messages.properties](https://github.com/AlbertProfe/CifoJava2023/tree/master/controllerView/src/main/resources){.external}</br> |
|  | 48 | 02/03 | + View-Controller  </br> (1) Mock-up user-librarian HTML  </br> (2) Tree-Folder: packages  </br> (3) User: Java Lombok Class and @UserController  </br> (4) User: fake @Repository (HashMap) and @Service  </br> <s>(5) CRUD Operations User and draft Librarian </s></br>  - <s>Spring Timeline <s></br> | [Lab#SB00-2](/springboot/sblab0-2.qmd) </br> [Lab#SB02-Library5 Code](https://github.com/AlbertProfe/cifojava2022-3/tree/master/library5){.external} </br>  [Lab#SB02-Library5 Docs](https://github.com/AlbertProfe/cifojava2022-3/wiki/Library5:-ThymeLeaf-Web-Project){.external}  </br> [controllerView](https://github.com/AlbertProfe/CifoJava2023/tree/master/controllerView){.external} |
|  | 49 | 03/03 | + Deliveries MF01</br> + Spring Boot: </br> (1) Summary week </br> ++ How to Connect Domains </br> (1) URL+ paths: localhost: 8080/home </br> (2) annotations: @Controller, @RequestMapping, @RequestParam </br> (3) Dependency Injection @Autowired UserService userService </br>  + SCRUM: </br> <s>(1) Motivation/Purpose 2 </s></br> (2) Order and How we see the world </br>  <s>(3) spaceX beyond Scrum </s> | [controllerView](https://github.com/AlbertProfe/CifoJava2023/tree/0a821cc862d142f213b13f65586de09236699ee9/controllerView){.external} </br> [Neuroscience: You Will Never Lack Motivation Again](https://www.newtraderu.com/2023/02/25/neuroscience-you-will-never-lack-motivation-again/?utm_content=cmp-true){.external} |
: Backlog course February 2023 table {tbl-colwidths="[2,2,2,64,30]"}

## March 2023

| Sprint | Day | Date | Topics |  Details Topics |
| -- | -- | -- | -- | -- |
| **#11** | **50** | **06/03** | - controllerView: </br> (1) CRUD: create User </br> <s>(2) CRUD: delete User </s></br> (3) CRUD: Librarian </br> ++ Renfe use-case RedSys error </br> ++ Time Mangement is Mind Management | [PJG-1](https://ruc.udc.es/dspace/bitstream/handle/2183/25132/C.Busto_Sistema_de_compra_y_consumo_de_t%C3%ADckets_2019.pdf){.external} - [PJG-2](https://oa.upm.es/54274/1/TFG_CARLOS_JIMENEZ_ALIAGA.pdf){.external} - [PJG-3](https://uvadoc.uva.es/bitstream/handle/10324/45258/TFG-B.%201564.pdf?sequence=4&isAllowed=y){.external} - [PJG-4](https://m.riunet.upv.es/bitstream/handle/10251/150920/Vacas%20-%20TeacherQuiz%3A%20una%20herramienta%20de%20apoyo%20para%20dinamizar%20la%20ense%C3%B1anza.%20Evaluaci%C3%B3n%20y%20desarroll....pdf?sequence=1&isAllowed=y){.external} </br> [Screenshoot origin](https://twitter.com/juanmacias/status/1631704758577659943){.external} </br>  [Renfe error log](/images/springboot/renfe.jpg){width="60%"} </br></br> [Time management](/books/MindManagementNotTimeManagement.qmd#key-takeaways) </br> [LibraryManagement](){.external}| 
|  | 51 | 07/03 | + controllerView: </br> (1) CRUD: create User</br>  | [CRUD: create](/springboot/sblab0-2.qmd#crud-create) </br> [userController: create](https://github.com/AlbertProfe/CifoJava2023/tree/dea67f25d24bcc89a6141762d5ed17085660349b/controllerView){.external}|
|  | 52 | 08/03 | + controllerView: </br> (1) CRUD: update User draft </br> (2) CRUD: delete User draft</br>  | - |
|  | 53 | 09/03 | + controllerView: </br> (1) CRUD: update User </br> <s>(2) CRUD: delete User</s></br> | [CRUD: update](/springboot/sblab0-2.qmd#crud-update) </br> [controllerView: update](https://github.com/AlbertProfe/CifoJava2023/tree/e4c046a70dba18dc3fcc9515cac269dec7523374/controllerView){.external} </br>   |
|  | 54 | 10/03 | + SCRUM: </br> (1) Motivation/Purpose 2 </br> + How we see the world: </br> (1) noise </br>(2) how it works (no-negotation) </br> (3) order </br> (4) time management</br> + Decision-making: </br> (1) execution: Albertu's Dilemma</br> - <s>Vocabulary: </br> (1) Spring Boot </s></br> | [controllerView: delete](https://github.com/AlbertProfe/CifoJava2023/tree/master/controllerView/src){.external}</br></br>[Mind Management - Article](https://kadavy.medium.com/mind-management-not-time-management-25ebd3a58dc6){.external}</br> [Mind Mangement - Book](/books/MindManagementNotTimeManagement.qmd) </br> [Why the Mental Health of Liberal Girls Sank First and Fastest](https://jonathanhaidt.substack.com/p/mental-health-liberal-girls){.external}</br></br>[Happy families are all alike; every unhappy family is unhappy in its own way](/images/home/anna_karenina.jpg) |
| **#12** | **55** | **13/03** | + LibraryManagement: </br> (1) refactor variables and packages </br> (2) Project > Management </br> (3) userController > Management </br>(4) Library5 > Management| [CRUD: delete](/springboot/sblab0-2.qmd#crud-delete) </br> [userController: delete](https://github.com/AlbertProfe/CifoJava2023/tree/6cb9830203dd3376e98bd0c1b0483dc2a5f16751/controllerView){.external} </br>  [userController: detail & createFakeUsers](https://github.com/AlbertProfe/CifoJava2023/tree/dfe9468a358c033851a5d5f06887008d33098616/controllerView){.external} </br></br>  |
|  | 56 | 14/03 | + LibraryManagement: </br> (1) Borrow Domain: select books </br>  + LibraryProject: </br>  (1) finish core use-cases v.0</br> (2) finish main UML v.0</br> | [Lab#SB00-3](/springboot/sblab0-3.qmd) </br></br>[LibraryManagement: integration project](https://github.com/AlbertProfe/CifoJava2023/tree/076dad9b52714b1bb5edb72f27c053494d5e86b0/LibraryManagement){.external} </br> [LibraryManagement: select books](https://github.com/AlbertProfe/CifoJava2023/tree/5eeeaa816c4de2ad7b5c9e732d50de630bb4bbfb/LibraryManagement){.external} </br> ![Tasks by energy level](/images/home/energy.jpg){width="40%"} </br> [RequestMapping](https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/bind/annotation/RequestMapping.html){.external}|
|  | 57 | 15/03 |  + LibraryManagement: </br> (1) Borrow Domain: Borrow class</br> (2) Filter table </br> (3) session/httpServeletRequest creation</br> +  Spring Session</br> +  Spring HttpServletRequest </br>| [HttpSession with JDBC](https://docs.spring.io/spring-session/reference/samples.html){.external} </br> [HTTP Session State Caching with Spring](https://docs.spring.io/spring-boot-data-geode-build/1.2.x/reference/html5/guides/caching-http-session.html){.external} </br>[Filter table JS Client](https://www.w3schools.com/howto/howto_js_filter_table.asp){.external} </br> </br> [LibraryManagement: session](https://github.com/AlbertProfe/CifoJava2023/tree/8f1942b915b5d043e1948ffe65ee55fa0d26cff3/LibraryManagement){.external}|
|  | 58 | 16/03 |  ++ LibraryManagement: </br> (1) Fake login and select option</br> (2) Conditional render</br>  (3) Debbuging session  </br> - <s>Git </br>- Spring Boot Rest </br> - ThymeLeaf: </br> (1) Fragments </br> </s>| [LibrayManagement: session and fake login](https://github.com/AlbertProfe/CifoJava2023/tree/bfd71cc985e8ae2ec72b5f0f13282aae0ff0f088){.external} </br> [Handling Form Submission](https://spring.io/guides/gs/handling-form-submission/){.external} |
|  | 59 | 17/03 | - SCRUM: </br>  (0) Less Wrong </br>(1) Time management </br>  (2) Getting things done </br> - The three `great untruths 2023`: </br> (1) What doesn’t kill you makes you weaker </br> (2) Always trust your feelings <b>(motivation?)</b> </br> (3) Life is a battle between good people and evil people |  [Happy SCRUM groups are all alike..](/images/home/happy-scrum-groups-are-all-alike-every-unhappy-scrum-group.jpg) </br> [Getting the things done](/books/gettingthingsdone.qmd)  </br>[Why the Mental Health of Liberal Girls Sank First and Fastest](https://jonathanhaidt.substack.com/p/mental-health-liberal-girls){.external}</br></br> [Frakfurt School](https://study.com/academy/lesson/frankfurt-school-critical-theory-philosophy.html){.external} </br> [End of history](https://theconversation.com/the-end-of-history-francis-fukuyamas-controversial-idea-explained-193225){.external} </br> [Ikigai](https://tristanelosegui.com/wp-content/uploads/2022/05/Ikigai.jpeg){.external} |
| **#13** | **60** | **20/03** | + Week planning: </br> (1) goal: practicing decision-making and attention-FUDA (focus, execute now!), rest and feed your soul, open-lops, inertia law </br> (2) tools: doing, done, taks, energies  </br> (3) ultimate goal: metrics > know speed delivering > get closer to optimus </br>(4) plan week: 15 blocks </br> + LibraryManagement:  </br>  (1) fake Login and logout: refreshing </br> (2) fakeBorrows & borrowsByUser (pagination)  </br> | ![Planning](/images/springboot/planning.jpg){width="50%"}</br> [FUD](https://en.wikipedia.org/wiki/Fear,_uncertainty,_and_doubt){.external} & [Anxiety](/books/gettingthingsdone.qmd#anxiety) </br>  ![Eisenhower-Matrix](https://hive.com/wp-content/uploads/2022/03/Eisenhower-Matrix-900x551.png){width="30%"} </br> [Library Management 0.3](https://github.com/AlbertProfe/CifoJava2023/tree/5538e59e988fc8ec07009644717f8ae820096916/LibraryManagement){.external}  |
|  | 61 | 21/03 | - <s>LibraryManagement:  </br>  (1) make user borrow (by Librarian) </br>   (2) return book</s> </br> + LibraryManagement:  </br>  (1) fake Login and logout: functional diagram </br>  | ![Fake Login/Logout Functional Cycle](/images/springboot/loginlogut.jpg){width="60%"} </br> [Library Management 0.4](https://github.com/AlbertProfe/CifoJava2023/tree/82f4c404b914ef17ae1aee8446ee7f919791b27e/LibraryManagement){.external} </br> [Library Management 0.5](https://github.com/AlbertProfe/CifoJava2023/tree/3ea97b7d7414fd82244f67563aa72c0cf2bd8ef4/LibraryManagement){.external} |
|  | 62 | 22/03 | + LibraryManagement:  </br>  (1) make user borrow (by Librarian) </br>  (2) make  borrow (by Librarian at borrow domain) </br>  (3) return book</br> |  [Library Management 0.6](https://github.com/AlbertProfe/CifoJava2023/tree/bc4747d50b1b3effaa3e367df7931672f71aa471/LibraryManagement){.external} </br> [Library Management 0.7](https://github.com/AlbertProfe/CifoJava2023/tree/4a2599405941d32bdf5431cde70a8052c845588e/LibraryManagement){.external} </br>|
|  | 63 | 23/03 |  + LibraryManagement </br> (1) API Rest: introduction </br>(2) API Rest: Postman & Swagger </br> (3) API Rest @EntityResponse  </br>  <s>(4) fragments </s></br>  ++ LibraryManagement API rest | [Postman](https://www.postman.com/){.external}</br>  [Swagger](https://swagger.io/){.external}</br>  [Wikipedia API Rest endpoints](https://en.wikipedia.org/api/rest_v1/){.external}</br>  [Wikipedia API Rest: nasa example](https://en.wikipedia.org/api/rest_v1/page/mobile-sections/NASA){.external}</br> [Library Management 0.8](https://github.com/AlbertProfe/CifoJava2023/tree/d172165261482387422b47f1ed5bdcf357c3131f/LibraryManagement){.external} : [BookRestController](https://github.com/AlbertProfe/CifoJava2023/blob/d172165261482387422b47f1ed5bdcf357c3131f/LibraryManagement/src/main/java/com/example/myFirstSpring/restcontroller/BookRestController.java){.external} </br>|
|  | 64 | 24/03 | + SCRUM: </br> + Getting things done  </br>  (1) overload, overthink, overdesire </br> (2) fail fast, and yes, hunt your ghosts </br> (3)  down your cognitive laod </br> (4) fuda </br> (5) is motivation a unicorn ? </br>| [Getting Things done](/books/gettingthingsdone.qmd#five-tips) |
| **#14** | **65** | **27/03** | + API Rest: </br> (1) CRUD: <s>create</s>, delete, <s>update</s> </br> (2) Postman  </br> (3) @EntityResponse intro</br>| [Library1: API Rest CRUD reference docs](https://github.com/AlbertProfe/cifojava2022-3/wiki/Library1:-API-Rest-Book-CRUD-with-Postman-Swagger){.external} </br>[Library1: API Rest CRUD RestController java class](https://github.com/AlbertProfe/cifojava2022-3/blob/master/library1/src/main/java/io/company/library/LibraryRestController.java){.external} </br>[Library Management Rest 0.1](https://github.com/AlbertProfe/CifoJava2023/tree/cdee65c2c0afa44adb8c0a967de22c9a57a993a1/LibraryManagementRest){.external} </br> [Lab#SB00-4](/springboot/sblab0-4.qmd) |
|  | 66 | 28/02 | + API Rest </br> (1) CRUD: <s>update</s>, create `Book` </br> (2) CRUD: `Borrow`  </br>  (3) Swagger intro </br> (4) Mockito & JUnit test for Rest intro </br>| [LibraryManagementRest 0.2](https://github.com/AlbertProfe/CifoJava2023/tree/b5fcf2a90186f66a58f119dfaf17ee0be0ddb47c/LibraryManagementRest){.external}  </br> [Lab#SB00-4](/springboot/sblab0-4.qmd)  |
|  | 67 | 29/03 | + API Rest  </br> <s>(1) @EntityResponse </s></br>(2) CRUD: update </br> (3) upate book: generic object, array of fields and stream, filter |  [Java SE: Java 8](/javase/se-concepts-java8.qmd) </br> [Lab#SB00-4](/springboot/sblab0-4.qmd) </br> [Library Management Rest 0.3](https://github.com/AlbertProfe/CifoJava2023/tree/700854752bbc5d420e968744f2a0a3bfe7db1e47/LibraryManagementRest){.external}  </br>  [Library Management Rest 0.4](https://github.com/AlbertProfe/CifoJava2023/tree/b5fcf2a90186f66a58f119dfaf17ee0be0ddb47c/LibraryManagementRest){.external} |
|  | 68 | 30/03 | + NoSQL: what is NoSQL and SQL H2 JPA </br> + MongoDB / dynamoDB | [Spring Boot Data](/springboot/boot-concepts-data.qmd) </br>![employee NoSQL](/images/springboot/nosql_employee.png){width="30%"} - ![SQL is relationnal](/images/springboot/many-to-many-relation%20(1).png){width="30%"}</br> [Google sheet Employee template](https://docs.google.com/spreadsheets/d/1X4r6_FaPeXt11Wil_D9j6fqxJDhAzvL4KJUithBVqGQ/edit?usp=sharing){.external} |
|  | 69 | 31/03 | + SCRUM <s>Time</s> (mind) management: </br>  (1) execution: getting things done </br> (2) good & fresh decisions qty </br> (3) pavolands avoided qty </br> (4) did u learn something new and really useful? </br> (5) how does good planification mean? </br>  + Vocabulary </br> | - |
: Backlog course March 2023 table {tbl-colwidths="[2,2,2,64,30]"}

## April 2023

| Sprint | Day | Date | Topics |  Details Topics |
| -- | -- | -- | -- | -- |
| **#15** | **70** | **03/04** | + LibraryManagementRest </br> (1) Install, create and set H2 DB  </br> (2) JPA H2 DB `Book` and `User` entities | [Library Management Rest H2 0.0](https://github.com/AlbertProfe/CifoJava2023/tree/4b1fd3c8f9be159c7b0f3f9f400ac3de737ac8e2/LibraryManagementRest){.external} </br> [Spring Boot: H2 DB and Thymeleaf](/springboot/boot-what-create-th-h2.qmd) </br> [Spring Boot: Rest](/springboot/boot-concepts-rest.qmd) </br> [Lab#SB00-5](/springboot/sblab0-5.qmd) |
|  | 71 | 04/04 | + LibraryManagementRest </br> (1) API Rest @ResponseEntity </br> (2) JPA H2 DB: optional  </br>  (3) JPA H2 DB: refactor HashMap to H2 DB: `User` </br> (4) JPA H2 DB: refactor HashMap to H2 DB: `Book` | [Library Management Rest H2 0.1](https://github.com/AlbertProfe/CifoJava2023/tree/fe772fd6b4a506e8dc78b68f76aec78abdfcd74f/LibraryManagementRest){.external} </br> [Library Management Rest H2 0.2](https://github.com/AlbertProfe/CifoJava2023/tree/6584393853ee83a567d6f50e9da1d24cab30e67d/LibraryManagementRest){.external} |
|  | 72 | 05/04 | + LibraryManagementRest </br> (1)  JPA H2 DB: populate `Borrow` table </br> (2)  JPA H2 DB: create `Borrow` with foreign Ids (keys) </br> (3)  JPA H2 DB: return `Borrow` with borrowId | [Library Management Rest H2 0.3](https://github.com/AlbertProfe/CifoJava2023/tree/dc5e356288df97e515652eed95f30dbee6e37cc9/LibraryManagementRest){.external} </br> [Library Management Rest H2 0.4](https://github.com/AlbertProfe/CifoJava2023/tree/8a8ed4da847d476ed7fc6c9613314f5e0d34f734/LibraryManagementRest){.external} </br>  |
|  | 73 | 06/04 | + LibraryManagement </br> (1) JPA H2 DB: `borrowIds` in `user` </br> (2) JPA H2 DB: @OneToMany intro </br> (3) JPA H2 DB: @ManyToMany intro </br>  | [Library Management Rest H2 0.5](https://github.com/AlbertProfe/CifoJava2023/tree/50633e8524313a189d234805beb9234effb65d17/LibraryManagementRest){.external}  |
| **#16** | **74** | **11/04** | + NoSQL: what is NoSQL and SQL H2 JPA </br> + MongoDB / dynamoDB    </br></br> + Render 3D: Nerf / TouchDesigner </br>    | [#15 68	30/03](/ifcd0210/ifcd0210backlog-product.qmd#march-2023)  </br> [employeeCourse](/springboot/sblab6.qmd){.external} </br> </br> [NeRF 3D](https://www.plainconcepts.com/nerf-3d/){.external} - [Nerf example: water reflections](https://twitter.com/smallfly/status/1597004739774152704?s=20){.external} -  [TouchDesigner Curriculum](https://derivative.ca/showcase){.external} -  [Nerf](https://www.matthewtancik.com/nerf){.external} -   | 
|  | 75 | 12/04 | + LibraryManagement </br> (1) MongoDB: API Rest CRUD </br> (2) MongoDB: API Rest Image and @RestController | [Spring Boot Data](/springboot/boot-concepts-data.qmd) </br>  [Accessing Data with MongoDB](https://spring.io/guides/gs/accessing-data-mongodb/){.external} </br> [Spring Boot Integration with MongoDB Tutorial](https://www.mongodb.com/compatibility/spring-boot){.external} </br> [Java - Mapping POJOs](https://www.mongodb.com/developer/languages/java/java-mapping-pojos/){.external} </br> [MongoDB Atlas](https://cloud.mongodb.com/){.external} </br></br> [Library7](https://github.com/AlbertProfe/cifojava2022-5/wiki/Library7-:-MongoDB-Spring-Boot-Project-with-API-Rest){.external}  </br>  [Lab#SB00-6: Rest & MongoDB](/springboot/sblab0-6.qmd#versions)   </br> [Library Management Rest MongoDB 0.0](https://github.com/AlbertProfe/Cifoadd data encryptationJava2023/tree/d56d89b50179209547097c36a2da977a22d33875/LibraryManagementRest){.external} |
|  | 76 | 13/04 | + LibraryManagement </br> (1) MongoDB: Images CRUD  </br> (2) MongoDB: Images id to List `books` from `book` |   [Lab#SB00-6: Rest & MongoDB](/springboot/sblab0-6.qmd#versions)   </br> [Library Management Rest MongoDB 0.1](https://github.com/AlbertProfe/CifoJava2023/tree/ffe874191e40e9f54f81a6e5c883edc581f96f5f/LibraryManagementRest){.external}  </br> [Library Management Rest MongoDB 0.2](https://github.com/AlbertProfe/CifoJava2023/tree/1ae3bdbc654df8f25658acf177e8d6b65e6c6c55/LibraryManagementRest){.external} |
|  | 77 | 14/04 | + LibraryManagement <s></br> (1) MongoDB: encrypted data </s> </br> (2) Review</br> - Vocabulary </br>  + Sprint Retrospective:  </br>   (1)  mental fatigue, pavoland, wells?  </br> (2) optimus, joy the victory, what did u learn? </br> (3) what about decision-making? </br> + Pràctiques </br>   | [Spring Boot API REST & H2-Mongo DataBase: securityDemo2](https://sites.google.com/view/githubrepositories/p%C3%A0gina-principal#h.jth972rwpd3p){.external} - [securityDemo2 code](https://github.com/AlbertProfe/javaSpringBoot_Viladoms-3/tree/main/securityDemo2){.external} </br> [bcrypt](https://bcrypt-generator.com/){.external}|
| **#17** | **78** | **17/04** | + React: </br> (1) Intro </br> (2) nodejs and npm  </br> (3) Create React Project `npx` | [Create React app](/reactjs/reactjs-what-create.qmd) </br> [Principles](/reactjs/reactjs-what-principles.qmd) </br> [Code sandbox](https://codesandbox.io/dashboard){.external} </br> [nodejs](https://nodejs.org/en){.external} - [npm](https://www.npmjs.com/){.external}  <br> [Lab#RE00-1](/reactjs/rjslab1.qmd)|
|  | 79 | 18/04 | + React: </br> (1) Components </br> (2) JSX `.jsx` | [What is component](/reactjs/reactjs-what-components.qmd) </br>[What is JSX](/reactjs/reactjs-what-jsx.qmd) </br> [var, let and const](https://www.freecodecamp.org/news/differences-between-var-let-const-javascript/){.external} </br> [Git Code: hola & hola2](https://github.com/AlbertProfe/CifoJava2023-2){.external} |
|  | 80 | 19/04 | + React: </br> (1) css </br> (2) semantic  | [Semantic React](https://react.semantic-ui.com/){.external} </br> [Material React](https://m3.material.io/){.external} |
|  | 81 | 20/04 | + React: </br> (1) Props and States </br> (2) React is immutable| [Props and states](/reactjs/reactjs-what-props.qmd) </br> [What is immutability in React](https://reacttraining.com/blog/state-in-react-is-immutable){.external}  </br>[hola3: semantic Cards](https://github.com/AlbertProfe/CifoJava2023-2/tree/7360db4246c11f8600c99f31cdbf6b4f1800d03b){.external} </br> [semantic installation](https://react.semantic-ui.com/usage/){.external} |
|  | 82 | 21/04 | + SCRUM </br> (1) Week retrospective </br> + Vocabulary </br> + Pràctiques </br>| [hola4](https://github.com/AlbertProfe/CifoJava2023-2/tree/9a39be58befadce1a70f6d08497a208a8eec7a11){.external} </br> [Map mdn](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map){.external} |
| **#18** | **83** | **24/04** | + React: </br>  (0) roadmap </br>  (1) props </br> (2) update/render cycle </br> (3) userState: intro </br> (4) project structure: tree-folder </br>  | [Roadmap](/images/reactjs/roadmap.png){width="20%"} </br> [useState](/reactjs/reactjs-hook-state.qmd) </br> [React project structure](/reactjs/reactjs-what-create.qmd#reactjs-project-structure) </br> [route example](https://codesandbox.io/s/to-do-11-hh9efc){.external} |
|  | 84 | 25/04 | + React: </br> (1) route </br> (2) JS ES6: spread operator </br> <s>(3) userEffect: intro </s></br> (4) update/render cycle: pure component  </br>  - <s><Pràctiques</s></br> | [app route](/reactjs/reactjs-app-router.qmd) </br>  [spread operator](/reactjs/reactjs-es6-spread.qmd) </br>[Keep components pure](/reactjs/reactjs-what-props.qmd#keep-components-pure) </br> [ex1](https://codesandbox.io/s/dd5hyk?file=/App.js&utm_medium=sandpack){.external} -  [ex2](https://codesandbox.io/s/qxptky?file=/App.js:0-73&utm_medium=sandpack){.external} - [ex3](https://codesandbox.io/s/yxnodj?file=/App.js&utm_medium=sandpack){.external} - |
|  | 85 | 26/04 | + React: </br> (1) intro: userReducer / userEffect  </br> (2) JS ES6: destructuring  </br> (3) conditional render | [useReducer](/reactjs/reactjs-hook-reducer.qmd) </br> [useEffect](/reactjs/reactjs-hook-effect.qmd) </br> [Conditional Render](/reactjs/reactjs-app-conditional-render.qmd) </br> [hola5 - 0.0](https://github.com/AlbertProfe/CifoJava2023-2/tree/2404dbaad80566fe038a01e14e910a125089dc08/hola5){.external} |
|  | 86 | 27/04 | + React: </br> (1) userReducer </br> (2) JS ES6: import/export </br> + Pràctiques: entrevistes | [Lab#RE02-1](/reactjs/rjslab2.qmd) </br>  [codesandbox with handlers functions](https://codesandbox.io/s/usereducer-example-form-nuyyyi?file=/App.js){.external} </br> [codesandbox dispatcher onChange, onClick](https://codesandbox.io/s/usereducer-example-form-v2-pbj3kh?file=/App.js){.external} </br> [React reference manual: useReducer](https://react.dev/reference/react/useReducer#usage){.external}  |
|  | 87 | 28/04 | + SCRUM: </br> (1) Retrospecive </br>  (2) Lateralization </br> * Pràctiques </br> + Vocabulary </br> | - |
: Backlog course April 2023 table {tbl-colwidths="[2,2,2,64,30]"}

## May 2023

| Sprint | Day | Date | Topics |  Details Topics |
| -- | -- | -- | -- | -- |
| **#19** | **88** | **02/05** | + useReducer: </br> (1) hola5.personProfile </br>  ++ Intro to ``Matter with Things``  by Iain McGilchrist | [hola5 0.1](https://github.com/AlbertProfe/CifoJava2023-2/tree/aa824232395113d08efd6a86af38ebbc2a1e1e14/hola5){.external} </br>  [Lab#RE02-1](/reactjs/rjslab2.qmd#usereducer-person-profile-form) |
|  | 89 | 03/05 | + useReducer, useRef, useEffect: </br> (1) hola5.clock  </br> + useContext </br> + useEffect </br>  + Maps of meaning |  [hola5 0.2](){.external} </br>  [Lab#RE02-1 clock](/reactjs/rjslab2.qmd#usereducer-useeffect-useref-clock) </br> [useContext](/reactjs/reactjs-hook-context.qmd) </br>  [useEffect](/reactjs/reactjs-hook-effect.qmd) </br>  [Rules of Hooks](/reactjs/reactjs-hook-rules.qmd) </br> [Maps of meaning](https://www.jordanbpeterson.com/maps-of-meaning/){.external} - [Book .pdf](https://ia600701.us.archive.org/7/items/MapsOfMeaningTheArchitectureOfBeliefPetersonlnwAdam/Maps%20of%20Meaning%20The%20Architecture%20of%20Belief-Peterson%20%28lnw%20Adam%29.pdf){.external}   |
|  | 90 | 04/05 | + useEffect, useRef, useReducer: </br> (1) hola5.clock | [Lab#RE02-1 clock](/reactjs/rjslab2.qmd#usereducer-useeffect-useref-clock) </br>   |
|  | 91 | 05/05 |  +  useEffect: </br> (1) hola5.apiRest </br> <s>-  useReducer, useRef, useEffect, useContext: </br> (1) to-do </br> </s> + Debbug React </br> + SCRUM </br> (1) attention: the portal to reality (science, reason, imagination, intuition) </br> (2) well types: pareto,approach mode, time management, forget order, decision making, lost. </br> (3) Hemispheres modes: apprehend-compprehend </br> <s> - Vocabulary </s> </br> + Retrospective | [Lab#RE02-1 apiRest](/reactjs/rjslab2.qmd#api-rest) </br> <s>[Lab#RE03-1: to-do](/reactjs/rjslab2.qmd)</s> </br> [How to debbug React](https://www.digitalocean.com/community/tutorials/how-to-debug-react-components-using-react-developer-tools){.external}  </br></br>   [Can the divided brain tell us anything about the ultimate nature of reality?](https://www.rcpsych.ac.uk/docs/default-source/members/sigs/spirituality-spsig/iain-mcgilchrist-can-the-divided-brain-tell-us-anything-about-the-ultimate-nature-of-reality.pdf?sfvrsn%3Da1e381e1_2){.external} </br> [Brain leraning cycle](/books/theMasterAndHisEmissary.qmd#brain-modes-cycle)|
| **#20** | **92** | **08/05** | - <s>useEffect, useRef, useReducer: </br> (1) hola5.clock </br> (2) cleanup function </s></br>  + useContext: </br> (1) hola5.login </br> + semantic table hola5.home </br>  ++ books listing new categories | [useContext](/reactjs/reactjs-hook-context.qmd) </br> [Lab#RE02-1 clock](/reactjs/rjslab2.qmd#usereducer-useeffect-useref-clock) </br> [Lab#RE02-1 login](/reactjs/rjslab2.qmd#usecontext-login) </br> [books listing new categories and books](/learning/learning-listing-table-books.qmd) </br> [Semantic React Table](https://codesandbox.io/s/53j20o?module=/example.js){.external} |
|  | 93 | 09/05 | + useEffect, useRef, useReducer: </br> (1) hola5.clock </br> (2) cleanup function </br> + useRef, useReducer, useContext: </br> (1) to-do: useCase, use story & mockup </br> + async </br> + Pràctiques | [Lab#RE03-1](/reactjs/rjslab3.qmd) </br> [async](/reactjs/reactjs-app-async.qmd) </br>  [todoApp](https://github.com/AlbertProfe/CifoJava2023-2/tree/c269b2ad6704635e4e966676598fd23428d05bb7/todoapp){.external} |
|  | 94 | 10/05 | + useRef, useReducer, useContext: </br> (1) to-do: reducer, create new todo </br>  (2) to-do: highCharts and semantic </br>  | [Lab#RE03-1](/reactjs/rjslab3.qmd) </br> [HighCharts](https://www.highcharts.com/) <br/> [todoApp 0.1](https://github.com/AlbertProfe/CifoJava2023-2/tree/96c8f427a889ccd8f32517c38ee1b8b6a2bd54ba/todoapp){.external} |
|  | 95 | 11/05 | + useRef, useReducer, useContext: </br> (1) useContext </br> (2) to-do: reducer, read, delete todo </br> | [todoApp 0.2](https://github.com/AlbertProfe/CifoJava2023-2/tree/9b1cc003788e3335ed04e6630b19e0a2b841c297/todoapp){.external}  |
|  | 96 | 12/05 |  + useRef, useReducer, useContext: </br>  (1) to-do: reducer, uupdate todo </br>  + SCRUM: </br> (1) how did you manage attention? </br> + Retrospective </br> + Delivereries & Tests  | - |
| **#21** | **97** | **15/05** | + axios, fetch </br> (1) api rest mockapi </br> + useRef, useReducer, useContext: </br>  (1) to-do: context API </br> | [Lab#RE03-3](/reactjs/rjslab3-3.qmd) </br>  [codesandbox api rest todo cards](https://6kgxh7.csb.app/){.external} </br>  [deployed api rest todo cards](https://6kgxh7.csb.app/){.external} </br> [mock api](https://mockapi.io/){.external} </br>  |
|  | 98 | 16/05 | + highcharts: </br> (1) to-do: visualisation data </br> (2) import data json </br>  (3) function calculate </br> + styling |  [Lab#RE03-2](/reactjs/rjslab3-2.qmd) </br>  [codesanbox highcharts: todo-app-3](https://codesandbox.io/s/todo-app-3-v08qbi){.external}  </br>  [styling](/reactjs/reactjs-app-styling.qmd) </br>   |
|  | 99 | 17/05 | + axios, fetch </br> (1) to-do: api rest consume data </br> (2) to-do: async </br>  |  [Lab#RE03-3](/reactjs/rjslab3-3.qmd) </br>  [codesanbox rest axios/fetch: todo-app-4](https://codesandbox.io/s/todo-app-4-6kgxh7?file=/src/todo/TodoApp.jsx){.external} </br> [async](/reactjs/reactjs-app-async.qmd) - [async docs mozilla](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function#try_it){.external}  </br> [You Might Not Need an Effect](https://react.dev/learn/you-might-not-need-an-effect#fetching-data){.external}   </br>  |
|  | 100 | 18/05 | - <s>store </br> (1) redux/reducer </br> local storage </s></br> + axios, fetch </br> (1) to-do: api rest consume data </br> (2) to-do: async </br> + React paradigm-core: </br> (1) immutable/mutable  </br> (2) sync/async </br> (3) scope (API Context/useContext/Providers)  </br> (4) render cycle: trigger/render/paint  </br> | [Fetching data](https://react.dev/learn/synchronizing-with-effects#fetching-data){.external} |
|  | 101 | 19/05 | + SCRUM: </br> (0) How rich (abundance/scarcity) is created? </br> (1) Why just left mode is wrong?  </br> (2) The map is no the territory: fishing factory </br> (3) Right mode: living in the ambiguity</br> (4) Taleb/McGilchrist: Simple/Complicated/Complex </br>  (5) What is a problem? Why science is losing prestige? </br> (6)  Mountain Manifesto </br> + Retrospective  | [Al Pacino best speech - Any Given Sunday - 1080p HD](https://www.youtube.com/watch?v=f1yWSePMqsk){.external} <br/> [Mountain Manifesto](https://dark-mountain.net/about/manifesto/){.external} </br>  [The world is not a problem - Iain McGilchrist and Dougald Hine](https://www.youtube.com/watch?v=PSFdJ7fRDjM){.external}      |
| **#22** | **102** | **22/05** | + useContext to-do CRUD api rest </br> ++ React paradigm: how to manage data </br> (1) context </br> (2) redux </br> (3) local storage  </br> just api rest </br> ++ Virtual DOM| [Lab#RE03-3](/reactjs/rjslab3-3.qmd) </br> [virtual DOM](/reactjs/reactjs-what-render-dom.qmd) </br> ![todo domains schema](/images/reactjs/todo-domains-schema.jpg) </br> [useForm](https://usehooks-ts.com/react-hook/use-fetch){.external} </br> [redux](https://redux.js.org/tutorials/fundamentals/part-2-concepts-data-flow){.external} </br> ![redux](/images/reactjs/redux-fig.gif) |
|  | 103 | 23/05 | + useContext to-do CRUD api rest: </br> (1) mono API Rest </br> (1) domains API Rest | [Lab#RE03-3](/reactjs/rjslab3-3.qmd) </br> [Lab#RE03-4](/reactjs/rjslab3-4.qmd) |
|  | 104 | 24/05 | + useContext to-do CRUD api rest: </br> (1) domains useContext </br> (2) api rest data acces layer  </br> - <s> websockets: </br> (1) general approach & use-story </br> (2) mock-up </s> | [Lab#RE03-4](/reactjs/rjslab3-4.qmd) </br> [What is JavaScript Object Literal?](https://playcode.io/javascript/object-literal){.external}  </br> [codesanbox websocket context AWS](https://codesandbox.io/s/mychat-1-ktru2t?file=/src/chat/SocketProvider.js){.external}  </br>  [MindValley Barcelona](https://www.mindvalley.com/films/barcelona-experiment/invite){.external} |
|  | 105 | 25/05 | - <s>local.storage</s> </br> - useContext to-do CRUD api rest: </br> (1) domains useContext </br> (2) components </br> + websockets: </br> (1) general approach & domains </br>(2) mock-up </br> |  [Lab#RE03-4](/reactjs/rjslab3-4.qmd) </br>  [Lab#RE04-1](/reactjs/rjslab4.qmd) </br> [Lab#RE05-1](/reactjs/rjslab5-1.qmd) |
|  | 106 | 26/05 | + useContext to-do CRUD api rest: </br> (1) domains useContext </br> (2) whole app architecture  </br> + SCRUM </br> (1) Beyond SCRUM </br> (2) Beyond SCRUM: Netflix  </br> - <s>Retrospective</s> |  [Lab#RE03-4](/reactjs/rjslab3-4.qmd) </br> [Lab#RE05-1](/reactjs/rjslab5-1.qmd) </br> </br>  [Agile Netflix](https://www.youtube.com/watch?v=sV3B9Zgz_go){.external} - [Beyond](https://www.linkedin.com/posts/mark-lambertz_beyond-scrum-when-talking-to-engineers-activity-6944719050744709120-R82j?trk=public_profile_like_view){.external} - [Netflix agile: 5 lessons](https://smartbear.com/blog/5-lessons-agile-teams-can-learn-from-netflix/){.external} - [Professional sports team: build to win](https://summation.net/2009/07/22/netflix-values-we-are-a-professional-sports-team-not-a-family/){.external} - [No rules rules](https://www.norulesrules.com/){.external} |
| **#23** | **107** | **29/05** | + Spring Boot Todo & React Todo **Draft** </br> (1) API Rest ``@RestController`` </br> (2) MongoDB </br>  (3) RestJS: Axios & Context ``Data Acces Layer`` | [A's team, Talent Density , Candor, Remove control](https://admiredleadership.com/resource/no-rules-rules-leadership/){.external} </br>![Spring Boot & ReactJS todo](/images/reactjs/spring-react.jpg) |
|  | 108 | 30/05 |  + Spring Boot Todo & React Todo </br> (1) API Rest ``@RestController`` </br> (2) MongoDB </br>  (3) RestJS: Axios & Context ``Data Acces Layer`` |  [ReactJS](https://react.dev/){.external} </br>  [ReactJS to React: 18 is the turning point](https://www.youtube.com/watch?v=1LkOa7Ky2ak&ab_channel=Academind){.external} </br> </br> [Spring Boot and ReactJS: LAB#RE04-2](/reactjs/rjslab4-2.qmd) </br>|
|  | 109 | 31/05 | + Spring Boot Todo & React Todo </br> (1) API Rest ``@RestController`` </br> (2) MongoDB </br>  (3) RestJS: Axios & Context ``Data Acces Layer`` </br> - <s>websockets: </br> (1) general approach & domains </br>(2) mock-up </s> </br> | [Spring Boot and ReactJS: LAB#RE04-2](/reactjs/rjslab4-2.qmd) </br> [Published docs API Rest](https://documenter.getpostman.com/view/7473960/2s93mATzRb){.external} </br> [System Design bytebytyego.com](https://blog.bytebytego.com/){.external} |
|  | 110 | 01/06 | + Spring Boot Todo & React Todo </br> (1) API Rest ``@RestController`` </br> (2) MongoDB </br>  (3) RestJS: Axios & Context ``Data Acces Layer`` </br>  - <s>websockets: </br> (1) data access layer & context </br>(2) components </s></br>  | [Spring Boot and ReactJS: LAB#RE04-2](/reactjs/rjslab4-2.qmd) </br> [Published docs API Rest](https://documenter.getpostman.com/view/7473960/2s93mATzRb){.external}  |
|  | 111 | 02/06 | + Group Project | - |
: Backlog course May 2023 table {tbl-colwidths="[2,2,2,64,30]"}

## June 2023

| Sprint | Day | Date | Topics |  Details Topics |
| -- | -- | -- | -- | -- |
| **#24** | **112** | **06/06** | + websockets: </br> (1) Architecture: ReactJS - AWS </br>(2) lambda & components </br>  | [MyChat: Architecture](/reactjs/rjslab5-1.qmd)  </br> [MyChat: Architecture](/reactjs/rjslab5-2.qmd) |
|  | 113 | 07/06 | + websockets: </br> (1) AWS: backend </br>(2) API Gateway </br> | [MyChat: AWS](/reactjs/rjslab5-3.qmd)  </br>  [MyChat: AWS](/reactjs/rjslab5-4.qmd)|
|  | 114 | 08/06 | + websockets: </br> (1) ReactJS: data access layer & context </br>(2) components </br> | [MyChat: ReactJS](/reactjs/rjslab5-5.qmd)  </br> [MyChat: ReactJS](/reactjs/rjslab5-6.qmd)  </br> ![AWS and ReactJS Draft MyChat](/images/reactjs/react-aws-draft.jpg)|
|  | 115 | 09/06 | + Formació Copmplementària | - |
|  | 116 | 12/06 | + Formació Copmplementària | - |
: Backlog course June 2023 table {tbl-colwidths="[2,2,2,64,30]"}

## July 2023

Finishing `Pràctiques`

:::

